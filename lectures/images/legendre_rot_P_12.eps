%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Monday, 23 March 2015 00:53:46 o'clock CST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
500 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
500.000 0 l
500.000 500.000 l
0 500.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 490 490 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
1.00000 0.701961 0.701961 RG
7.00000 -1.00000 480.995 489.000 rc
newpath
8.00000 389.378 m
10.5131 368.840 l
12.6997 352.195 l
15.1588 334.784 l
17.6342 318.599 l
20.0979 303.770 l
22.3820 291.111 l
24.7471 279.063 l
27.1930 267.685 l
29.6312 257.389 l
32.1391 247.836 l
34.3480 240.252 l
36.8348 232.600 l
39.3318 225.813 l
41.7381 220.078 l
43.9232 215.521 l
46.5216 210.864 l
48.7227 207.532 l
51.2832 204.323 l
53.5496 202.047 l
56.0363 200.122 l
58.4041 198.812 l
60.8748 197.953 l
63.1436 197.591 l
65.5908 197.628 l
68.1328 198.101 l
70.3455 198.846 l
72.7354 199.974 l
75.2044 201.461 l
77.6198 203.206 l
79.9568 205.143 l
82.5517 207.550 l
84.8833 209.921 l
87.3728 212.644 l
89.6287 215.263 l
92.0949 218.268 l
94.4155 221.212 l
96.8411 224.392 l
99.2126 227.582 l
101.695 230.990 l
104.086 234.320 l
106.531 237.757 l
111.185 244.330 l
113.739 247.924 l
116.023 251.113 l
118.459 254.474 l
120.790 257.642 l
123.378 261.091 l
125.620 264.010 l
128.164 267.235 l
130.482 270.085 l
133.018 273.096 l
135.207 275.596 l
137.699 278.328 l
140.106 280.841 l
142.512 283.225 l
144.909 285.466 l
147.212 287.489 l
149.701 289.529 l
152.073 291.327 l
154.570 293.060 l
156.831 294.488 l
159.329 295.906 l
161.721 297.105 l
164.108 298.145 l
166.601 299.064 l
168.897 299.759 l
171.249 300.319 l
173.846 300.762 l
176.196 301.004 l
178.601 301.096 l
181.046 301.031 l
183.293 300.832 l
185.689 300.475 l
188.067 299.976 l
190.610 299.285 l
192.854 298.544 l
195.443 297.541 l
197.780 296.503 l
200.092 295.355 l
202.578 293.993 l
205.075 292.497 l
207.346 291.028 l
209.758 289.362 l
212.112 287.635 l
214.663 285.657 l
216.871 283.862 l
219.407 281.711 l
221.791 279.608 l
224.152 277.455 l
226.514 275.235 l
228.924 272.912 l
231.478 270.390 l
233.820 268.033 l
236.132 265.669 l
238.604 263.109 l
241.069 260.528 l
243.283 258.195 l
245.905 255.420 l
248.099 253.095 l
250.665 250.379 l
253.114 247.799 l
255.300 245.511 l
257.759 242.962 l
260.235 240.431 l
262.698 237.953 l
264.982 235.699 l
267.348 233.416 l
269.794 231.115 l
272.232 228.891 l
274.740 226.682 l
276.949 224.807 l
279.435 222.784 l
281.932 220.852 l
284.339 219.090 l
286.524 217.580 l
289.122 215.902 l
291.323 214.585 l
293.884 213.179 l
296.150 212.052 l
298.637 210.948 l
301.005 210.029 l
303.475 209.212 l
305.744 208.593 l
308.191 208.070 l
310.733 207.688 l
312.946 207.493 l
315.336 207.428 l
317.805 207.521 l
320.220 207.772 l
322.557 208.166 l
325.152 208.780 l
327.484 209.490 l
329.973 210.414 l
332.229 211.399 l
334.695 212.634 l
337.016 213.948 l
339.442 215.475 l
341.813 217.119 l
344.296 218.997 l
346.687 220.953 l
349.132 223.100 l
351.557 225.372 l
353.786 227.578 l
356.340 230.244 l
358.624 232.744 l
361.060 235.525 l
363.391 238.292 l
365.979 241.474 l
368.221 244.316 l
370.765 247.628 l
373.083 250.718 l
375.619 254.165 l
377.808 257.184 l
380.300 260.662 l
382.707 264.049 l
387.510 270.832 l
389.813 274.069 l
392.302 277.537 l
394.674 280.795 l
397.171 284.155 l
399.431 287.120 l
401.929 290.293 l
404.322 293.209 l
406.709 295.978 l
409.202 298.698 l
411.498 301.027 l
413.850 303.215 l
416.446 305.373 l
418.797 307.067 l
421.202 308.519 l
423.647 309.677 l
425.894 310.432 l
428.290 310.884 l
429.479 310.965 l
430.667 310.945 l
431.939 310.809 l
433.211 310.549 l
435.455 309.773 l
438.044 308.346 l
440.381 306.535 l
442.693 304.223 l
445.179 301.122 l
447.676 297.327 l
449.947 293.247 l
452.359 288.219 l
454.713 282.586 l
457.264 275.623 l
459.472 268.842 l
462.008 260.140 l
464.392 251.025 l
466.753 241.060 l
469.115 230.109 l
471.525 217.883 l
474.079 203.703 l
476.421 189.548 l
478.733 174.443 l
481.204 156.999 l
483.670 138.200 l
485.995 119.146 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
q
0.701961 0.850980 0.701961 RG
7.00000 -1.00000 480.995 489.000 rc
newpath
8.00000 254.262 m
10.5131 214.919 l
12.6997 185.780 l
15.1588 158.272 l
17.6342 135.801 l
20.0979 118.230 l
22.3820 105.874 l
24.7471 96.7499 l
25.9701 93.3932 l
27.1930 90.9097 l
27.8026 89.9853 l
28.4121 89.2627 l
29.0216 88.7370 l
29.6312 88.4034 l
30.2581 88.2555 l
30.8851 88.3006 l
31.5121 88.5337 l
32.1391 88.9497 l
33.2435 90.1123 l
34.3480 91.8006 l
36.8348 97.3920 l
39.3318 105.268 l
41.7381 114.746 l
43.9232 124.761 l
46.5216 138.179 l
48.7227 150.642 l
51.2832 166.196 l
53.5496 180.739 l
56.0363 197.353 l
58.4041 213.651 l
60.8748 230.994 l
63.1436 247.091 l
65.5908 264.505 l
68.1328 282.511 l
70.3455 298.014 l
72.7354 314.477 l
75.2044 331.079 l
77.6198 346.831 l
79.9568 361.530 l
82.5517 377.144 l
84.8833 390.473 l
87.3728 403.908 l
89.6287 415.325 l
92.0949 426.937 l
94.4155 436.995 l
96.8411 446.576 l
99.2126 454.995 l
101.695 462.781 l
104.086 469.267 l
106.531 474.861 l
108.957 479.364 l
111.185 482.583 l
113.739 485.190 l
114.881 485.984 l
116.023 486.550 l
117.241 486.902 l
118.459 486.998 l
119.624 486.850 l
120.790 486.471 l
122.084 485.781 l
123.378 484.810 l
125.620 482.477 l
128.164 478.846 l
130.482 474.654 l
133.018 469.134 l
135.207 463.615 l
137.699 456.511 l
140.106 448.856 l
142.512 440.466 l
144.909 431.412 l
147.212 422.097 l
149.701 411.392 l
152.073 400.618 l
154.570 388.726 l
156.831 377.512 l
159.329 364.672 l
161.721 351.981 l
164.108 338.985 l
166.601 325.104 l
168.897 312.087 l
171.249 298.571 l
173.846 283.482 l
176.196 269.721 l
181.046 241.229 l
183.293 228.059 l
185.689 214.104 l
188.067 200.384 l
190.610 185.896 l
192.854 173.315 l
195.443 159.080 l
197.780 146.535 l
200.092 134.440 l
202.578 121.824 l
205.075 109.606 l
207.346 98.9127 l
209.758 88.0309 l
212.112 77.9128 l
214.663 67.5377 l
216.871 59.0839 l
219.407 50.0020 l
221.791 42.1013 l
224.152 34.9079 l
226.514 28.3572 l
228.924 22.3633 l
231.478 16.7865 l
233.820 12.3907 l
236.132 8.73678 l
238.604 5.59463 l
241.069 3.25509 l
243.283 1.83804 l
245.905 1.00000 l
248.099 1.00122 l
250.665 1.81475 l
253.114 3.40536 l
255.300 5.49386 l
257.759 8.58938 l
260.235 12.4948 l
262.698 17.1564 l
264.982 22.1567 l
267.348 28.0079 l
269.794 34.7631 l
272.232 42.1891 l
274.740 50.5260 l
276.949 58.4349 l
279.435 67.9473 l
281.932 78.1190 l
284.339 88.4791 l
286.524 98.3356 l
289.122 110.576 l
291.323 121.360 l
293.884 134.341 l
296.150 146.192 l
298.637 159.543 l
301.005 172.557 l
303.475 186.406 l
305.744 199.327 l
308.191 213.440 l
310.733 228.244 l
312.946 241.210 l
317.805 269.759 l
320.220 283.896 l
322.557 297.480 l
325.152 312.399 l
327.484 325.610 l
329.973 339.461 l
332.229 351.741 l
334.695 364.824 l
337.016 376.762 l
339.442 388.808 l
341.813 400.113 l
344.296 411.400 l
346.687 421.695 l
349.132 431.593 l
351.557 440.737 l
353.786 448.512 l
356.340 456.643 l
358.624 463.174 l
361.060 469.330 l
363.391 474.411 l
365.979 479.086 l
368.221 482.286 l
370.765 484.935 l
371.924 485.789 l
373.083 486.418 l
374.351 486.846 l
375.619 486.999 l
376.714 486.909 l
377.808 486.612 l
379.054 486.020 l
380.300 485.155 l
382.707 482.710 l
385.113 479.241 l
387.510 474.765 l
389.813 469.507 l
392.302 462.775 l
394.674 455.358 l
397.171 446.513 l
399.431 437.609 l
401.929 426.806 l
404.322 415.543 l
406.709 403.456 l
409.202 389.971 l
411.498 376.823 l
413.850 362.690 l
416.446 346.376 l
418.797 331.037 l
421.202 314.874 l
423.647 298.036 l
425.894 282.289 l
428.290 265.319 l
430.667 248.402 l
433.211 230.357 l
435.455 214.601 l
438.044 196.774 l
440.381 181.163 l
442.693 166.315 l
445.179 151.190 l
447.676 137.083 l
449.947 125.372 l
452.359 114.312 l
454.713 105.093 l
457.264 97.1117 l
459.472 92.1148 l
460.740 90.1275 l
462.008 88.8325 l
462.604 88.4745 l
463.200 88.2826 l
463.796 88.2611 l
464.392 88.4144 l
465.572 89.2514 l
466.753 90.8266 l
467.934 93.1778 l
469.115 96.3409 l
471.525 105.468 l
474.079 119.371 l
476.421 136.287 l
478.733 157.231 l
481.204 184.662 l
483.670 217.642 l
485.995 254.262 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
q
2.00000 w
1.00000 0 0 RG
6.00000 -2.00000 482.995 491.000 rc
newpath
8.00000 389.378 m
8.75393 383.055 l
9.40992 377.666 l
10.1476 371.731 l
10.8902 365.889 l
11.6293 360.203 l
12.3146 355.046 l
13.0241 349.820 l
13.7579 344.537 l
14.4893 339.390 l
15.2417 334.221 l
15.9044 329.771 l
16.6504 324.874 l
17.3995 320.078 l
18.1214 315.567 l
18.7769 311.566 l
19.5564 306.922 l
20.2168 303.085 l
20.9849 298.732 l
21.6649 294.975 l
22.4108 290.958 l
23.1212 287.232 l
23.8624 283.446 l
24.5430 280.061 l
25.2772 276.505 l
26.0398 272.915 l
26.7036 269.875 l
27.4206 266.680 l
28.1613 263.474 l
28.8859 260.428 l
29.5870 257.566 l
30.3655 254.485 l
31.0650 251.802 l
31.8118 249.024 l
32.4886 246.585 l
33.2284 244.001 l
33.9246 241.647 l
34.6523 239.266 l
35.3637 237.015 l
36.1086 234.740 l
36.8259 232.625 l
37.5595 230.539 l
38.2870 228.546 l
38.9556 226.780 l
39.7218 224.831 l
40.4071 223.155 l
41.1377 221.437 l
41.8371 219.858 l
42.6136 218.180 l
43.2860 216.788 l
44.0492 215.276 l
44.7448 213.961 l
45.5056 212.589 l
46.1621 211.460 l
46.9098 210.236 l
47.6320 209.115 l
48.3537 208.053 l
49.0728 207.052 l
49.7636 206.143 l
50.5104 205.218 l
51.2221 204.392 l
51.9712 203.578 l
52.6492 202.890 l
53.3987 202.183 l
54.1165 201.557 l
54.8325 200.981 l
55.5804 200.432 l
56.2693 199.971 l
56.9748 199.544 l
57.7538 199.123 l
58.4590 198.788 l
59.1803 198.488 l
59.9138 198.228 l
60.5881 198.027 l
61.3068 197.854 l
62.0200 197.721 l
62.7830 197.623 l
63.4563 197.572 l
64.2331 197.555 l
64.9341 197.576 l
65.6278 197.632 l
66.3736 197.728 l
67.1225 197.862 l
67.8039 198.016 l
68.5275 198.212 l
69.2336 198.434 l
69.9991 198.710 l
70.6615 198.977 l
71.4222 199.314 l
72.1374 199.662 l
72.8456 200.033 l
73.5544 200.432 l
74.2773 200.866 l
75.0436 201.355 l
75.7462 201.828 l
76.4397 202.319 l
77.1811 202.869 l
77.9209 203.442 l
78.5849 203.978 l
79.3715 204.636 l
80.0297 205.207 l
80.7995 205.896 l
81.5342 206.576 l
82.1902 207.200 l
82.9279 207.920 l
83.6705 208.665 l
84.4096 209.425 l
85.0948 210.145 l
85.8044 210.907 l
86.5382 211.711 l
87.2696 212.528 l
88.0220 213.384 l
88.6846 214.151 l
89.4307 215.028 l
90.1798 215.922 l
90.9017 216.797 l
91.5572 217.601 l
92.3367 218.570 l
92.9971 219.400 l
93.7652 220.377 l
94.4451 221.251 l
95.1911 222.219 l
95.9015 223.149 l
96.6427 224.128 l
97.3233 225.034 l
98.0575 226.019 l
98.8201 227.049 l
99.4839 227.951 l
100.200 228.931 l
100.941 229.949 l
101.666 230.949 l
102.367 231.921 l
103.145 233.005 l
103.845 233.982 l
104.592 235.028 l
105.268 235.979 l
106.008 237.020 l
106.704 238.001 l
111.067 244.163 l
111.735 245.106 l
112.502 246.186 l
113.187 247.149 l
113.918 248.174 l
114.617 249.153 l
115.393 250.236 l
116.066 251.172 l
116.829 252.230 l
117.525 253.190 l
118.285 254.236 l
118.942 255.135 l
119.690 256.153 l
120.412 257.132 l
121.134 258.104 l
121.853 259.067 l
122.543 259.987 l
123.290 260.975 l
124.002 261.910 l
124.751 262.887 l
125.429 263.764 l
126.179 264.727 l
126.896 265.641 l
127.612 266.545 l
128.360 267.480 l
129.049 268.334 l
129.755 269.201 l
130.534 270.147 l
131.239 270.996 l
131.960 271.854 l
132.694 272.717 l
133.368 273.501 l
134.087 274.328 l
134.800 275.139 l
135.563 275.994 l
136.236 276.740 l
137.013 277.589 l
137.714 278.344 l
138.408 279.081 l
139.153 279.861 l
139.902 280.633 l
140.584 281.325 l
141.307 282.047 l
142.014 282.741 l
142.779 283.481 l
143.441 284.110 l
144.202 284.819 l
144.917 285.473 l
145.625 286.109 l
146.334 286.734 l
147.057 287.358 l
147.823 288.005 l
148.526 288.586 l
149.220 289.147 l
149.961 289.733 l
150.701 290.304 l
151.398 290.830 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
q
2.00000 w
0 0 1.00000 RG
6.00000 -2.00000 482.995 491.000 rc
newpath
8.00000 254.262 m
8.75393 241.775 l
9.40992 231.393 l
10.1476 220.241 l
10.8902 209.564 l
11.6293 199.473 l
12.3146 190.583 l
13.0241 181.841 l
13.7579 173.283 l
14.4893 165.232 l
15.2417 157.438 l
15.9044 150.972 l
16.6504 144.131 l
17.3995 137.718 l
18.1214 131.959 l
18.7769 127.080 l
19.5564 121.701 l
20.2168 117.496 l
20.9849 112.999 l
21.6649 109.365 l
22.4108 105.741 l
23.1212 102.636 l
23.8624 99.7460 l
24.5430 97.3978 l
25.2772 95.1850 l
26.0398 93.2285 l
26.7036 91.8014 l
27.4206 90.5407 l
28.1613 89.5359 l
28.8859 88.8373 l
29.5870 88.4212 l
30.3655 88.2497 l
31.0650 88.3485 l
31.8118 88.7100 l
32.4886 89.2591 l
33.2284 90.0928 l
33.9246 91.0929 l
34.6523 92.3545 l
35.3637 93.7948 l
36.1086 95.5142 l
36.8259 97.3679 l
37.5595 99.4570 l
38.2870 101.715 l
38.9556 103.947 l
39.7218 106.685 l
40.4071 109.289 l
41.1377 112.221 l
41.8371 115.172 l
42.6136 118.608 l
43.2860 121.713 l
44.0492 125.376 l
44.7448 128.838 l
45.5056 132.753 l
46.1621 136.234 l
46.9098 140.309 l
47.6320 144.351 l
48.3537 148.490 l
49.0728 152.706 l
49.7636 156.840 l
50.5104 161.394 l
51.2221 165.813 l
51.9712 170.541 l
52.6492 174.885 l
53.3987 179.751 l
54.1165 184.472 l
54.8325 189.235 l
55.5804 194.264 l
56.2693 198.939 l
56.9748 203.766 l
57.7538 209.137 l
58.4590 214.033 l
59.1803 219.070 l
59.9138 224.218 l
60.5881 228.969 l
61.3068 234.050 l
62.0200 239.107 l
62.7830 244.527 l
65.6278 264.767 l
66.3736 270.065 l
67.1225 275.374 l
67.8039 280.191 l
68.5275 285.291 l
69.2336 290.250 l
69.9991 295.601 l
70.6615 300.209 l
71.4222 305.472 l
72.1374 310.390 l
72.8456 315.227 l
73.5544 320.034 l
74.2773 324.900 l
75.0436 330.012 l
75.7462 334.658 l
76.4397 339.201 l
77.1811 344.010 l
77.9209 348.756 l
78.5849 352.970 l
79.3715 357.902 l
80.0297 361.979 l
80.7995 366.686 l
81.5342 371.115 l
82.1902 375.016 l
82.9279 379.341 l
83.6705 383.626 l
84.4096 387.821 l
85.0948 391.647 l
85.8044 395.542 l
86.5382 399.499 l
87.2696 403.368 l
88.0220 407.269 l
88.6846 410.638 l
89.4307 414.353 l
90.1798 418.000 l
90.9017 421.435 l
91.5572 424.485 l
92.3367 428.025 l
92.9971 430.949 l
93.7652 434.263 l
94.4451 437.118 l
95.1911 440.164 l
95.9015 442.980 l
96.6427 445.829 l
97.3233 448.365 l
98.0575 451.013 l
98.8201 453.667 l
99.4839 455.898 l
100.200 458.221 l
100.941 460.529 l
101.666 462.695 l
102.367 464.704 l
103.145 466.834 l
103.845 468.658 l
104.592 470.510 l
105.268 472.104 l
106.008 473.753 l
106.704 475.217 l
107.432 476.655 l
108.144 477.971 l
108.888 479.252 l
109.606 480.393 l
110.339 481.465 l
111.067 482.434 l
111.735 483.242 l
112.502 484.071 l
113.187 484.724 l
113.918 485.329 l
114.617 485.821 l
115.393 486.266 l
116.066 486.566 l
116.829 486.812 l
117.525 486.947 l
118.285 487.000 l
118.942 486.965 l
119.690 486.835 l
120.412 486.619 l
121.134 486.315 l
121.853 485.925 l
122.543 485.468 l
123.290 484.885 l
124.002 484.244 l
124.751 483.478 l
125.429 482.707 l
126.179 481.768 l
126.896 480.784 l
127.612 479.720 l
128.360 478.523 l
129.049 477.343 l
129.755 476.059 l
130.534 474.552 l
131.239 473.108 l
131.960 471.554 l
132.694 469.894 l
133.368 468.299 l
134.087 466.526 l
134.800 464.693 l
135.563 462.653 l
136.236 460.784 l
137.013 458.551 l
137.714 456.465 l
138.408 454.336 l
139.153 451.976 l
139.902 449.533 l
140.584 447.248 l
141.307 444.757 l
142.014 442.263 l
142.779 439.491 l
143.441 437.036 l
144.202 434.152 l
144.917 431.379 l
145.625 428.576 l
146.334 425.715 l
147.057 422.740 l
147.823 419.525 l
148.526 416.524 l
149.220 413.511 l
149.961 410.237 l
150.701 406.917 l
151.398 403.738 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
8.00000 254.262 m
485.995 254.262 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
360 277 13 15 rc
newpath
366.250 283.250 m
366.458 283.468 366.614 283.692 366.718 283.921  c
366.802 284.067 366.927 284.463 367.093 285.109  c
367.656 284.281 l
367.802 284.072 367.981 283.877 368.195 283.695  c
368.408 283.513 368.593 283.385 368.750 283.312  c
368.854 283.270 368.968 283.250 369.093 283.250  c
369.270 283.250 369.414 283.299 369.523 283.398  c
369.632 283.497 369.687 283.614 369.687 283.750  c
369.687 283.916 369.656 284.031 369.593 284.093  c
369.479 284.197 369.343 284.250 369.187 284.250  c
369.093 284.250 369.000 284.229 368.906 284.187  c
368.708 284.125 368.572 284.093 368.500 284.093  c
368.395 284.093 368.276 284.151 368.140 284.265  c
367.880 284.484 367.567 284.911 367.203 285.546  c
367.718 287.718 l
367.802 288.052 367.869 288.252 367.921 288.320  c
367.974 288.388 368.031 288.421 368.093 288.421  c
368.177 288.421 368.281 288.375 368.406 288.281  c
368.635 288.083 368.833 287.828 369.000 287.515  c
369.218 287.625 l
368.947 288.125 368.609 288.541 368.203 288.875  c
367.974 289.062 367.776 289.156 367.609 289.156  c
367.369 289.156 367.182 289.020 367.046 288.750  c
366.953 288.583 366.770 287.875 366.500 286.625  c
365.833 287.770 365.302 288.505 364.906 288.828  c
364.645 289.046 364.395 289.156 364.156 289.156  c
363.989 289.156 363.833 289.093 363.687 288.968  c
363.593 288.875 363.546 288.750 363.546 288.593  c
363.546 288.458 363.593 288.343 363.687 288.250  c
363.781 288.156 363.895 288.109 364.031 288.109  c
364.166 288.109 364.307 288.177 364.453 288.312  c
364.567 288.406 364.656 288.453 364.718 288.453  c
364.760 288.453 364.822 288.421 364.906 288.359  c
365.104 288.192 365.375 287.843 365.718 287.312  c
366.062 286.781 366.286 286.395 366.390 286.156  c
366.130 285.125 365.989 284.583 365.968 284.531  c
365.875 284.250 365.750 284.052 365.593 283.937  c
365.437 283.822 365.203 283.765 364.890 283.765  c
364.796 283.765 364.687 283.770 364.562 283.781  c
364.562 283.546 l
366.250 283.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
8.00000 254.262 m
8.00000 259.262 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 267 6 13 rc
newpath
16.7968 274.437 m
8.20312 274.437 l
8.20312 273.765 l
16.7968 273.765 l
16.7968 274.437 l
h
f
Q
newpath
15.5312 270.234 m
17.6250 269.218 l
17.8281 269.218 l
17.8281 276.484 l
17.8281 276.963 17.8489 277.263 17.8906 277.382  c
17.9322 277.502 18.0156 277.593 18.1406 277.656  c
18.2656 277.718 18.5208 277.755 18.9062 277.765  c
18.9062 278.000 l
15.6718 278.000 l
15.6718 277.765 l
16.0781 277.755 16.3411 277.718 16.4609 277.656  c
16.5807 277.593 16.6640 277.510 16.7109 277.406  c
16.7578 277.302 16.7812 276.994 16.7812 276.484  c
16.7812 271.843 l
16.7812 271.208 16.7604 270.802 16.7187 270.625  c
16.6875 270.489 16.6328 270.390 16.5546 270.328  c
16.4765 270.265 16.3802 270.234 16.2656 270.234  c
16.1093 270.234 15.8958 270.302 15.6250 270.437  c
15.5312 270.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
127.499 254.262 m
127.499 259.262 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
120 267 6 13 rc
newpath
130.796 274.437 m
122.203 274.437 l
122.203 273.765 l
130.796 273.765 l
130.796 274.437 l
h
f
Q
newpath
128.468 273.750 m
128.468 272.770 128.617 271.924 128.914 271.210  c
129.210 270.497 129.604 269.968 130.093 269.625  c
130.479 269.354 130.875 269.218 131.281 269.218  c
131.937 269.218 132.526 269.552 133.046 270.218  c
133.703 271.052 134.031 272.182 134.031 273.609  c
134.031 274.609 133.888 275.458 133.601 276.156  c
133.315 276.854 132.947 277.362 132.500 277.679  c
132.052 277.997 131.625 278.156 131.218 278.156  c
130.395 278.156 129.708 277.671 129.156 276.703  c
128.697 275.880 128.468 274.895 128.468 273.750  c
h
129.718 273.906 m
129.718 275.093 129.864 276.062 130.156 276.812  c
130.395 277.437 130.755 277.750 131.234 277.750  c
131.463 277.750 131.700 277.648 131.945 277.445  c
132.190 277.242 132.375 276.895 132.500 276.406  c
132.697 275.687 132.796 274.661 132.796 273.328  c
132.796 272.349 132.692 271.531 132.484 270.875  c
132.338 270.385 132.140 270.041 131.890 269.843  c
131.724 269.708 131.515 269.640 131.265 269.640  c
130.984 269.640 130.729 269.765 130.500 270.015  c
130.197 270.369 129.992 270.924 129.882 271.679  c
129.773 272.434 129.718 273.177 129.718 273.906  c
h
136.125 276.765 m
136.322 276.765 136.489 276.835 136.625 276.976  c
136.760 277.117 136.828 277.281 136.828 277.468  c
136.828 277.666 136.760 277.833 136.625 277.968  c
136.489 278.104 136.322 278.171 136.125 278.171  c
135.927 278.171 135.760 278.104 135.625 277.968  c
135.489 277.833 135.421 277.666 135.421 277.468  c
135.421 277.270 135.489 277.104 135.625 276.968  c
135.760 276.833 135.927 276.765 136.125 276.765  c
h
143.390 269.390 m
142.890 270.468 l
140.312 270.468 l
139.750 271.625 l
140.864 271.791 141.750 272.208 142.406 272.875  c
142.968 273.447 143.250 274.125 143.250 274.906  c
143.250 275.364 143.158 275.786 142.976 276.171  c
142.794 276.557 142.562 276.885 142.281 277.156  c
142.000 277.427 141.687 277.640 141.343 277.796  c
140.864 278.036 140.364 278.156 139.843 278.156  c
139.333 278.156 138.960 278.067 138.726 277.890  c
138.492 277.713 138.375 277.520 138.375 277.312  c
138.375 277.187 138.424 277.080 138.523 276.992  c
138.622 276.903 138.744 276.859 138.890 276.859  c
138.994 276.859 139.088 276.875 139.171 276.906  c
139.255 276.937 139.395 277.026 139.593 277.171  c
139.916 277.390 140.239 277.500 140.562 277.500  c
141.062 277.500 141.497 277.312 141.867 276.937  c
142.237 276.562 142.421 276.104 142.421 275.562  c
142.421 275.041 142.255 274.557 141.921 274.109  c
141.588 273.661 141.130 273.312 140.546 273.062  c
140.078 272.875 139.447 272.765 138.656 272.734  c
140.312 269.390 l
143.390 269.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 254.262 m
246.997 259.262 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
243.468 271.750 m
243.468 270.770 243.617 269.924 243.914 269.210  c
244.210 268.497 244.604 267.968 245.093 267.625  c
245.479 267.354 245.875 267.218 246.281 267.218  c
246.937 267.218 247.526 267.552 248.046 268.218  c
248.703 269.052 249.031 270.182 249.031 271.609  c
249.031 272.609 248.888 273.458 248.601 274.156  c
248.315 274.854 247.947 275.362 247.500 275.679  c
247.052 275.997 246.625 276.156 246.218 276.156  c
245.395 276.156 244.708 275.671 244.156 274.703  c
243.697 273.880 243.468 272.895 243.468 271.750  c
h
244.718 271.906 m
244.718 273.093 244.864 274.062 245.156 274.812  c
245.395 275.437 245.755 275.750 246.234 275.750  c
246.463 275.750 246.700 275.648 246.945 275.445  c
247.190 275.242 247.375 274.895 247.500 274.406  c
247.697 273.687 247.796 272.661 247.796 271.328  c
247.796 270.349 247.692 269.531 247.484 268.875  c
247.338 268.385 247.140 268.041 246.890 267.843  c
246.724 267.708 246.515 267.640 246.265 267.640  c
245.984 267.640 245.729 267.765 245.500 268.015  c
245.197 268.369 244.992 268.924 244.882 269.679  c
244.773 270.434 244.718 271.177 244.718 271.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
366.496 254.262 m
366.496 259.262 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
363.468 273.750 m
363.468 272.770 363.617 271.924 363.914 271.210  c
364.210 270.497 364.604 269.968 365.093 269.625  c
365.479 269.354 365.875 269.218 366.281 269.218  c
366.937 269.218 367.526 269.552 368.046 270.218  c
368.703 271.052 369.031 272.182 369.031 273.609  c
369.031 274.609 368.888 275.458 368.601 276.156  c
368.315 276.854 367.947 277.362 367.500 277.679  c
367.052 277.997 366.625 278.156 366.218 278.156  c
365.395 278.156 364.708 277.671 364.156 276.703  c
363.697 275.880 363.468 274.895 363.468 273.750  c
h
364.718 273.906 m
364.718 275.093 364.864 276.062 365.156 276.812  c
365.395 277.437 365.755 277.750 366.234 277.750  c
366.463 277.750 366.700 277.648 366.945 277.445  c
367.190 277.242 367.375 276.895 367.500 276.406  c
367.697 275.687 367.796 274.661 367.796 273.328  c
367.796 272.349 367.692 271.531 367.484 270.875  c
367.338 270.385 367.140 270.041 366.890 269.843  c
366.724 269.708 366.515 269.640 366.265 269.640  c
365.984 269.640 365.729 269.765 365.500 270.015  c
365.197 270.369 364.992 270.924 364.882 271.679  c
364.773 272.434 364.718 273.177 364.718 273.906  c
h
371.125 276.765 m
371.322 276.765 371.489 276.835 371.625 276.976  c
371.760 277.117 371.828 277.281 371.828 277.468  c
371.828 277.666 371.760 277.833 371.625 277.968  c
371.489 278.104 371.322 278.171 371.125 278.171  c
370.927 278.171 370.760 278.104 370.625 277.968  c
370.489 277.833 370.421 277.666 370.421 277.468  c
370.421 277.270 370.489 277.104 370.625 276.968  c
370.760 276.833 370.927 276.765 371.125 276.765  c
h
378.390 269.390 m
377.890 270.468 l
375.312 270.468 l
374.750 271.625 l
375.864 271.791 376.750 272.208 377.406 272.875  c
377.968 273.447 378.250 274.125 378.250 274.906  c
378.250 275.364 378.158 275.786 377.976 276.171  c
377.794 276.557 377.562 276.885 377.281 277.156  c
377.000 277.427 376.687 277.640 376.343 277.796  c
375.864 278.036 375.364 278.156 374.843 278.156  c
374.333 278.156 373.960 278.067 373.726 277.890  c
373.492 277.713 373.375 277.520 373.375 277.312  c
373.375 277.187 373.424 277.080 373.523 276.992  c
373.622 276.903 373.744 276.859 373.890 276.859  c
373.994 276.859 374.088 276.875 374.171 276.906  c
374.255 276.937 374.395 277.026 374.593 277.171  c
374.916 277.390 375.239 277.500 375.562 277.500  c
376.062 277.500 376.497 277.312 376.867 276.937  c
377.237 276.562 377.421 276.104 377.421 275.562  c
377.421 275.041 377.255 274.557 376.921 274.109  c
376.588 273.661 376.130 273.312 375.546 273.062  c
375.078 272.875 374.447 272.765 373.656 272.734  c
375.312 269.390 l
378.390 269.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
485.995 254.262 m
485.995 259.262 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
488.531 270.234 m
490.625 269.218 l
490.828 269.218 l
490.828 276.484 l
490.828 276.963 490.849 277.263 490.890 277.382  c
490.932 277.502 491.015 277.593 491.140 277.656  c
491.265 277.718 491.520 277.755 491.906 277.765  c
491.906 278.000 l
488.671 278.000 l
488.671 277.765 l
489.078 277.755 489.341 277.718 489.460 277.656  c
489.580 277.593 489.664 277.510 489.710 277.406  c
489.757 277.302 489.781 276.994 489.781 276.484  c
489.781 271.843 l
489.781 271.208 489.760 270.802 489.718 270.625  c
489.687 270.489 489.632 270.390 489.554 270.328  c
489.476 270.265 489.380 270.234 489.265 270.234  c
489.109 270.234 488.895 270.302 488.625 270.437  c
488.531 270.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
31.8997 254.262 m
31.8997 256.762 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
55.7995 254.262 m
55.7995 256.762 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
79.6993 254.262 m
79.6993 256.762 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
103.599 254.262 m
103.599 256.762 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
151.398 254.262 m
151.398 256.762 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
175.298 254.262 m
175.298 256.762 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
199.198 254.262 m
199.198 256.762 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
223.098 254.262 m
223.098 256.762 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
270.897 254.262 m
270.897 256.762 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
294.797 254.262 m
294.797 256.762 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
318.697 254.262 m
318.697 256.762 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
342.597 254.262 m
342.597 256.762 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
390.396 254.262 m
390.396 256.762 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
414.296 254.262 m
414.296 256.762 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
438.196 254.262 m
438.196 256.762 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
462.096 254.262 m
462.096 256.762 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
246.997 487.000 m
246.997 1.00000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
201 120 8 15 rc
Q
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
246.997 456.936 m
241.997 456.936 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
219 455 6 13 rc
newpath
229.796 462.437 m
221.203 462.437 l
221.203 461.765 l
229.796 461.765 l
229.796 462.437 l
h
f
Q
newpath
228.531 458.234 m
230.625 457.218 l
230.828 457.218 l
230.828 464.484 l
230.828 464.963 230.849 465.263 230.890 465.382  c
230.932 465.502 231.015 465.593 231.140 465.656  c
231.265 465.718 231.520 465.755 231.906 465.765  c
231.906 466.000 l
228.671 466.000 l
228.671 465.765 l
229.078 465.755 229.341 465.718 229.460 465.656  c
229.580 465.593 229.664 465.510 229.710 465.406  c
229.757 465.302 229.781 464.994 229.781 464.484  c
229.781 459.843 l
229.781 459.208 229.760 458.802 229.718 458.625  c
229.687 458.489 229.632 458.390 229.554 458.328  c
229.476 458.265 229.380 458.234 229.265 458.234  c
229.109 458.234 228.895 458.302 228.625 458.437  c
228.531 458.234 l
h
235.125 464.765 m
235.322 464.765 235.489 464.835 235.625 464.976  c
235.760 465.117 235.828 465.281 235.828 465.468  c
235.828 465.666 235.760 465.833 235.625 465.968  c
235.489 466.104 235.322 466.171 235.125 466.171  c
234.927 466.171 234.760 466.104 234.625 465.968  c
234.489 465.833 234.421 465.666 234.421 465.468  c
234.421 465.270 234.489 465.104 234.625 464.968  c
234.760 464.833 234.927 464.765 235.125 464.765  c
h
242.390 457.390 m
241.890 458.468 l
239.312 458.468 l
238.750 459.625 l
239.864 459.791 240.750 460.208 241.406 460.875  c
241.968 461.447 242.250 462.125 242.250 462.906  c
242.250 463.364 242.158 463.786 241.976 464.171  c
241.794 464.557 241.562 464.885 241.281 465.156  c
241.000 465.427 240.687 465.640 240.343 465.796  c
239.864 466.036 239.364 466.156 238.843 466.156  c
238.333 466.156 237.960 466.067 237.726 465.890  c
237.492 465.713 237.375 465.520 237.375 465.312  c
237.375 465.187 237.424 465.080 237.523 464.992  c
237.622 464.903 237.744 464.859 237.890 464.859  c
237.994 464.859 238.088 464.875 238.171 464.906  c
238.255 464.937 238.395 465.026 238.593 465.171  c
238.916 465.390 239.239 465.500 239.562 465.500  c
240.062 465.500 240.497 465.312 240.867 464.937  c
241.237 464.562 241.421 464.104 241.421 463.562  c
241.421 463.041 241.255 462.557 240.921 462.109  c
240.588 461.661 240.130 461.312 239.546 461.062  c
239.078 460.875 238.447 460.765 237.656 460.734  c
239.312 457.390 l
242.390 457.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 389.378 m
241.997 389.378 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
229 388 6 13 rc
newpath
239.796 395.437 m
231.203 395.437 l
231.203 394.765 l
239.796 394.765 l
239.796 395.437 l
h
f
Q
newpath
238.531 391.234 m
240.625 390.218 l
240.828 390.218 l
240.828 397.484 l
240.828 397.963 240.849 398.263 240.890 398.382  c
240.932 398.502 241.015 398.593 241.140 398.656  c
241.265 398.718 241.520 398.755 241.906 398.765  c
241.906 399.000 l
238.671 399.000 l
238.671 398.765 l
239.078 398.755 239.341 398.718 239.460 398.656  c
239.580 398.593 239.664 398.510 239.710 398.406  c
239.757 398.302 239.781 397.994 239.781 397.484  c
239.781 392.843 l
239.781 392.208 239.760 391.802 239.718 391.625  c
239.687 391.489 239.632 391.390 239.554 391.328  c
239.476 391.265 239.380 391.234 239.265 391.234  c
239.109 391.234 238.895 391.302 238.625 391.437  c
238.531 391.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 321.820 m
241.997 321.820 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
219 320 6 13 rc
newpath
229.796 327.437 m
221.203 327.437 l
221.203 326.765 l
229.796 326.765 l
229.796 327.437 l
h
f
Q
newpath
227.468 326.750 m
227.468 325.770 227.617 324.924 227.914 324.210  c
228.210 323.497 228.604 322.968 229.093 322.625  c
229.479 322.354 229.875 322.218 230.281 322.218  c
230.937 322.218 231.526 322.552 232.046 323.218  c
232.703 324.052 233.031 325.182 233.031 326.609  c
233.031 327.609 232.888 328.458 232.601 329.156  c
232.315 329.854 231.947 330.362 231.500 330.679  c
231.052 330.997 230.625 331.156 230.218 331.156  c
229.395 331.156 228.708 330.671 228.156 329.703  c
227.697 328.880 227.468 327.895 227.468 326.750  c
h
228.718 326.906 m
228.718 328.093 228.864 329.062 229.156 329.812  c
229.395 330.437 229.755 330.750 230.234 330.750  c
230.463 330.750 230.700 330.648 230.945 330.445  c
231.190 330.242 231.375 329.895 231.500 329.406  c
231.697 328.687 231.796 327.661 231.796 326.328  c
231.796 325.349 231.692 324.531 231.484 323.875  c
231.338 323.385 231.140 323.041 230.890 322.843  c
230.724 322.708 230.515 322.640 230.265 322.640  c
229.984 322.640 229.729 322.765 229.500 323.015  c
229.197 323.369 228.992 323.924 228.882 324.679  c
228.773 325.434 228.718 326.177 228.718 326.906  c
h
235.125 329.765 m
235.322 329.765 235.489 329.835 235.625 329.976  c
235.760 330.117 235.828 330.281 235.828 330.468  c
235.828 330.666 235.760 330.833 235.625 330.968  c
235.489 331.104 235.322 331.171 235.125 331.171  c
234.927 331.171 234.760 331.104 234.625 330.968  c
234.489 330.833 234.421 330.666 234.421 330.468  c
234.421 330.270 234.489 330.104 234.625 329.968  c
234.760 329.833 234.927 329.765 235.125 329.765  c
h
242.390 322.390 m
241.890 323.468 l
239.312 323.468 l
238.750 324.625 l
239.864 324.791 240.750 325.208 241.406 325.875  c
241.968 326.447 242.250 327.125 242.250 327.906  c
242.250 328.364 242.158 328.786 241.976 329.171  c
241.794 329.557 241.562 329.885 241.281 330.156  c
241.000 330.427 240.687 330.640 240.343 330.796  c
239.864 331.036 239.364 331.156 238.843 331.156  c
238.333 331.156 237.960 331.067 237.726 330.890  c
237.492 330.713 237.375 330.520 237.375 330.312  c
237.375 330.187 237.424 330.080 237.523 329.992  c
237.622 329.903 237.744 329.859 237.890 329.859  c
237.994 329.859 238.088 329.875 238.171 329.906  c
238.255 329.937 238.395 330.026 238.593 330.171  c
238.916 330.390 239.239 330.500 239.562 330.500  c
240.062 330.500 240.497 330.312 240.867 329.937  c
241.237 329.562 241.421 329.104 241.421 328.562  c
241.421 328.041 241.255 327.557 240.921 327.109  c
240.588 326.661 240.130 326.312 239.546 326.062  c
239.078 325.875 238.447 325.765 237.656 325.734  c
239.312 322.390 l
242.390 322.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 254.262 m
241.997 254.262 l
S
Q
q
0 w
newpath
246.997 186.704 m
241.997 186.704 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
227.468 191.750 m
227.468 190.770 227.617 189.924 227.914 189.210  c
228.210 188.497 228.604 187.968 229.093 187.625  c
229.479 187.354 229.875 187.218 230.281 187.218  c
230.937 187.218 231.526 187.552 232.046 188.218  c
232.703 189.052 233.031 190.182 233.031 191.609  c
233.031 192.609 232.888 193.458 232.601 194.156  c
232.315 194.854 231.947 195.362 231.500 195.679  c
231.052 195.997 230.625 196.156 230.218 196.156  c
229.395 196.156 228.708 195.671 228.156 194.703  c
227.697 193.880 227.468 192.895 227.468 191.750  c
h
228.718 191.906 m
228.718 193.093 228.864 194.062 229.156 194.812  c
229.395 195.437 229.755 195.750 230.234 195.750  c
230.463 195.750 230.700 195.648 230.945 195.445  c
231.190 195.242 231.375 194.895 231.500 194.406  c
231.697 193.687 231.796 192.661 231.796 191.328  c
231.796 190.349 231.692 189.531 231.484 188.875  c
231.338 188.385 231.140 188.041 230.890 187.843  c
230.724 187.708 230.515 187.640 230.265 187.640  c
229.984 187.640 229.729 187.765 229.500 188.015  c
229.197 188.369 228.992 188.924 228.882 189.679  c
228.773 190.434 228.718 191.177 228.718 191.906  c
h
235.125 194.765 m
235.322 194.765 235.489 194.835 235.625 194.976  c
235.760 195.117 235.828 195.281 235.828 195.468  c
235.828 195.666 235.760 195.833 235.625 195.968  c
235.489 196.104 235.322 196.171 235.125 196.171  c
234.927 196.171 234.760 196.104 234.625 195.968  c
234.489 195.833 234.421 195.666 234.421 195.468  c
234.421 195.270 234.489 195.104 234.625 194.968  c
234.760 194.833 234.927 194.765 235.125 194.765  c
h
242.390 187.390 m
241.890 188.468 l
239.312 188.468 l
238.750 189.625 l
239.864 189.791 240.750 190.208 241.406 190.875  c
241.968 191.447 242.250 192.125 242.250 192.906  c
242.250 193.364 242.158 193.786 241.976 194.171  c
241.794 194.557 241.562 194.885 241.281 195.156  c
241.000 195.427 240.687 195.640 240.343 195.796  c
239.864 196.036 239.364 196.156 238.843 196.156  c
238.333 196.156 237.960 196.067 237.726 195.890  c
237.492 195.713 237.375 195.520 237.375 195.312  c
237.375 195.187 237.424 195.080 237.523 194.992  c
237.622 194.903 237.744 194.859 237.890 194.859  c
237.994 194.859 238.088 194.875 238.171 194.906  c
238.255 194.937 238.395 195.026 238.593 195.171  c
238.916 195.390 239.239 195.500 239.562 195.500  c
240.062 195.500 240.497 195.312 240.867 194.937  c
241.237 194.562 241.421 194.104 241.421 193.562  c
241.421 193.041 241.255 192.557 240.921 192.109  c
240.588 191.661 240.130 191.312 239.546 191.062  c
239.078 190.875 238.447 190.765 237.656 190.734  c
239.312 187.390 l
242.390 187.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 119.146 m
241.997 119.146 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
238.531 121.234 m
240.625 120.218 l
240.828 120.218 l
240.828 127.484 l
240.828 127.963 240.849 128.263 240.890 128.382  c
240.932 128.502 241.015 128.593 241.140 128.656  c
241.265 128.718 241.520 128.755 241.906 128.765  c
241.906 129.000 l
238.671 129.000 l
238.671 128.765 l
239.078 128.755 239.341 128.718 239.460 128.656  c
239.580 128.593 239.664 128.510 239.710 128.406  c
239.757 128.302 239.781 127.994 239.781 127.484  c
239.781 122.843 l
239.781 122.208 239.760 121.802 239.718 121.625  c
239.687 121.489 239.632 121.390 239.554 121.328  c
239.476 121.265 239.380 121.234 239.265 121.234  c
239.109 121.234 238.895 121.302 238.625 121.437  c
238.531 121.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 51.5889 m
241.997 51.5889 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
228.531 53.2343 m
230.625 52.2187 l
230.828 52.2187 l
230.828 59.4843 l
230.828 59.9635 230.849 60.2630 230.890 60.3828  c
230.932 60.5026 231.015 60.5937 231.140 60.6562  c
231.265 60.7187 231.520 60.7552 231.906 60.7656  c
231.906 61.0000 l
228.671 61.0000 l
228.671 60.7656 l
229.078 60.7552 229.341 60.7187 229.460 60.6562  c
229.580 60.5937 229.664 60.5104 229.710 60.4062  c
229.757 60.3020 229.781 59.9947 229.781 59.4843  c
229.781 54.8437 l
229.781 54.2083 229.760 53.8020 229.718 53.6250  c
229.687 53.4895 229.632 53.3906 229.554 53.3281  c
229.476 53.2656 229.380 53.2343 229.265 53.2343  c
229.109 53.2343 228.895 53.3020 228.625 53.4375  c
228.531 53.2343 l
h
235.125 59.7656 m
235.322 59.7656 235.489 59.8359 235.625 59.9765  c
235.760 60.1171 235.828 60.2812 235.828 60.4687  c
235.828 60.6666 235.760 60.8333 235.625 60.9687  c
235.489 61.1041 235.322 61.1718 235.125 61.1718  c
234.927 61.1718 234.760 61.1041 234.625 60.9687  c
234.489 60.8333 234.421 60.6666 234.421 60.4687  c
234.421 60.2708 234.489 60.1041 234.625 59.9687  c
234.760 59.8333 234.927 59.7656 235.125 59.7656  c
h
242.390 52.3906 m
241.890 53.4687 l
239.312 53.4687 l
238.750 54.6250 l
239.864 54.7916 240.750 55.2083 241.406 55.8750  c
241.968 56.4479 242.250 57.1250 242.250 57.9062  c
242.250 58.3645 242.158 58.7864 241.976 59.1718  c
241.794 59.5572 241.562 59.8854 241.281 60.1562  c
241.000 60.4270 240.687 60.6406 240.343 60.7968  c
239.864 61.0364 239.364 61.1562 238.843 61.1562  c
238.333 61.1562 237.960 61.0677 237.726 60.8906  c
237.492 60.7135 237.375 60.5208 237.375 60.3125  c
237.375 60.1875 237.424 60.0807 237.523 59.9921  c
237.622 59.9036 237.744 59.8593 237.890 59.8593  c
237.994 59.8593 238.088 59.8750 238.171 59.9062  c
238.255 59.9375 238.395 60.0260 238.593 60.1718  c
238.916 60.3906 239.239 60.5000 239.562 60.5000  c
240.062 60.5000 240.497 60.3125 240.867 59.9375  c
241.237 59.5625 241.421 59.1041 241.421 58.5625  c
241.421 58.0416 241.255 57.5572 240.921 57.1093  c
240.588 56.6614 240.130 56.3125 239.546 56.0625  c
239.078 55.8750 238.447 55.7656 237.656 55.7343  c
239.312 52.3906 l
242.390 52.3906 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 483.959 m
244.497 483.959 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 470.447 m
244.497 470.447 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 443.424 m
244.497 443.424 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 429.913 m
244.497 429.913 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 416.401 m
244.497 416.401 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 402.889 m
244.497 402.889 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 375.866 m
244.497 375.866 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 362.355 m
244.497 362.355 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 348.843 m
244.497 348.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 335.332 m
244.497 335.332 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 308.308 m
244.497 308.308 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 294.797 m
244.497 294.797 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 281.285 m
244.497 281.285 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 267.774 m
244.497 267.774 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 240.751 m
244.497 240.751 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 227.239 m
244.497 227.239 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 213.727 m
244.497 213.727 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 200.216 m
244.497 200.216 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 173.193 m
244.497 173.193 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 159.681 m
244.497 159.681 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 146.170 m
244.497 146.170 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 132.658 m
244.497 132.658 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 105.635 m
244.497 105.635 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 92.1236 m
244.497 92.1236 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 78.6120 m
244.497 78.6120 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 65.1005 m
244.497 65.1005 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 38.0773 m
244.497 38.0773 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 24.5658 m
244.497 24.5658 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 11.0542 m
244.497 11.0542 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 500 500 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
