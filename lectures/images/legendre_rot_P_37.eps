%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Monday, 23 March 2015 00:54:20 o'clock CST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
500 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
500.000 0 l
500.000 500.000 l
0 500.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 490 490 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
1.00000 0.701961 0.701961 RG
7.00000 1.00205 480.995 486.998 rc
newpath
8.00000 389.785 m
10.5131 369.333 l
12.6997 352.758 l
15.1588 335.419 l
17.6342 319.302 l
20.0979 304.534 l
22.3820 291.929 l
24.7471 279.930 l
27.1930 268.600 l
29.6312 258.347 l
32.1391 248.834 l
34.3480 241.281 l
36.8348 233.661 l
39.3318 226.902 l
41.7381 221.192 l
43.9232 216.653 l
46.5216 212.016 l
48.7227 208.698 l
51.2832 205.502 l
53.5496 203.236 l
56.0363 201.319 l
58.4041 200.014 l
60.8748 199.159 l
63.1436 198.799 l
65.5908 198.835 l
68.1328 199.306 l
70.3455 200.048 l
72.7354 201.171 l
75.2044 202.652 l
77.6198 204.390 l
79.9568 206.319 l
82.5517 208.716 l
84.8833 211.077 l
87.3728 213.789 l
89.6287 216.396 l
92.0949 219.389 l
94.4155 222.321 l
96.8411 225.487 l
99.2126 228.664 l
101.695 232.058 l
104.086 235.374 l
106.531 238.797 l
111.185 245.342 l
113.739 248.921 l
116.023 252.097 l
118.459 255.444 l
120.790 258.599 l
123.378 262.034 l
125.620 264.940 l
128.164 268.152 l
130.482 270.990 l
133.018 273.988 l
135.207 276.478 l
137.699 279.198 l
140.106 281.701 l
142.512 284.075 l
144.909 286.307 l
147.212 288.322 l
149.701 290.353 l
152.073 292.143 l
154.570 293.870 l
156.831 295.291 l
159.329 296.703 l
161.721 297.897 l
164.108 298.933 l
166.601 299.848 l
168.897 300.540 l
171.249 301.098 l
173.846 301.539 l
176.196 301.780 l
178.601 301.872 l
181.046 301.807 l
183.293 301.609 l
185.689 301.253 l
188.067 300.756 l
190.610 300.068 l
192.854 299.331 l
195.443 298.331 l
197.780 297.297 l
200.092 296.155 l
202.578 294.798 l
205.075 293.308 l
207.346 291.846 l
209.758 290.186 l
212.112 288.467 l
214.663 286.497 l
216.871 284.710 l
219.407 282.568 l
221.791 280.474 l
224.152 278.329 l
226.514 276.119 l
228.924 273.805 l
231.478 271.294 l
233.820 268.946 l
236.132 266.592 l
238.604 264.043 l
241.069 261.473 l
243.283 259.150 l
245.905 256.386 l
248.099 254.071 l
250.665 251.366 l
253.114 248.797 l
255.300 246.518 l
257.759 243.980 l
260.235 241.459 l
262.698 238.992 l
264.982 236.747 l
267.348 234.474 l
269.794 232.183 l
272.232 229.968 l
274.740 227.768 l
276.949 225.901 l
279.435 223.887 l
281.932 221.962 l
284.339 220.208 l
286.524 218.704 l
289.122 217.033 l
291.323 215.721 l
293.884 214.321 l
296.150 213.199 l
298.637 212.100 l
301.005 211.184 l
303.475 210.371 l
305.744 209.755 l
308.191 209.234 l
310.733 208.854 l
312.946 208.659 l
315.336 208.594 l
317.805 208.687 l
320.220 208.937 l
322.557 209.330 l
325.152 209.941 l
327.484 210.648 l
329.973 211.568 l
332.229 212.548 l
334.695 213.779 l
337.016 215.087 l
339.442 216.608 l
341.813 218.245 l
344.296 220.115 l
346.687 222.063 l
349.132 224.201 l
351.557 226.463 l
353.786 228.661 l
356.340 231.315 l
358.624 233.805 l
361.060 236.574 l
363.391 239.329 l
365.979 242.498 l
368.221 245.328 l
370.765 248.627 l
373.083 251.704 l
375.619 255.136 l
377.808 258.143 l
380.300 261.606 l
382.707 264.979 l
387.510 271.734 l
389.813 274.958 l
392.302 278.411 l
394.674 281.655 l
397.171 285.001 l
399.431 287.954 l
401.929 291.113 l
404.322 294.017 l
406.709 296.775 l
409.202 299.484 l
411.498 301.803 l
413.850 303.982 l
416.446 306.131 l
418.797 307.818 l
421.202 309.264 l
423.647 310.416 l
425.894 311.169 l
428.290 311.619 l
429.479 311.699 l
430.667 311.680 l
431.939 311.544 l
433.211 311.285 l
435.455 310.512 l
438.044 309.091 l
440.381 307.288 l
442.693 304.985 l
445.179 301.897 l
447.676 298.119 l
449.947 294.055 l
452.359 289.049 l
454.713 283.439 l
457.264 276.505 l
459.472 269.752 l
462.008 261.086 l
464.392 252.009 l
466.753 242.086 l
469.115 231.181 l
471.525 219.005 l
474.079 204.885 l
476.421 190.789 l
478.733 175.747 l
481.204 158.376 l
483.670 139.655 l
485.995 120.681 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
q
0.701961 0.850980 0.701961 RG
7.00000 1.00205 480.995 486.998 rc
newpath
8.00000 255.233 m
10.5131 216.054 l
12.6997 187.036 l
15.1588 159.644 l
17.6342 137.266 l
20.0979 119.768 l
22.3820 107.465 l
24.7471 98.3781 l
25.9701 95.0353 l
27.1930 92.5622 l
27.8026 91.6417 l
28.4121 90.9221 l
29.0216 90.3986 l
29.6312 90.0663 l
30.2581 89.9191 l
30.8851 89.9640 l
31.5121 90.1961 l
32.1391 90.6104 l
33.2435 91.7681 l
34.3480 93.4493 l
36.8348 99.0174 l
39.3318 106.860 l
41.7381 116.299 l
43.9232 126.273 l
46.5216 139.634 l
48.7227 152.046 l
51.2832 167.534 l
53.5496 182.017 l
56.0363 198.561 l
58.4041 214.792 l
60.8748 232.062 l
63.1436 248.092 l
65.5908 265.433 l
68.1328 283.364 l
70.3455 298.802 l
72.7354 315.197 l
75.2044 331.730 l
77.6198 347.415 l
79.9568 362.053 l
82.5517 377.602 l
84.8833 390.875 l
87.3728 404.255 l
89.6287 415.624 l
92.0949 427.187 l
94.4155 437.204 l
96.8411 446.745 l
99.2126 455.129 l
101.695 462.882 l
104.086 469.341 l
106.531 474.912 l
108.957 479.396 l
111.185 482.601 l
113.739 485.198 l
114.881 485.988 l
116.023 486.551 l
117.241 486.902 l
118.459 486.998 l
119.624 486.851 l
120.790 486.473 l
122.084 485.786 l
123.378 484.819 l
125.620 482.496 l
128.164 478.880 l
130.482 474.705 l
133.018 469.209 l
135.207 463.713 l
137.699 456.638 l
140.106 449.015 l
142.512 440.660 l
144.909 431.644 l
147.212 422.368 l
149.701 411.707 l
152.073 400.979 l
154.570 389.136 l
156.831 377.969 l
159.329 365.182 l
161.721 352.544 l
164.108 339.603 l
166.601 325.779 l
168.897 312.817 l
171.249 299.357 l
173.846 284.331 l
176.196 270.627 l
181.046 242.254 l
183.293 229.140 l
185.689 215.243 l
188.067 201.580 l
190.610 187.153 l
192.854 174.623 l
195.443 160.448 l
197.780 147.955 l
200.092 135.910 l
202.578 123.348 l
205.075 111.180 l
207.346 100.531 l
209.758 89.6954 l
212.112 79.6196 l
214.663 69.2877 l
216.871 60.8692 l
219.407 51.8252 l
221.791 43.9575 l
224.152 36.7940 l
226.514 30.2707 l
228.924 24.3017 l
231.478 18.7482 l
233.820 14.3708 l
236.132 10.7321 l
238.604 7.60302 l
241.069 5.27328 l
243.283 3.86212 l
245.905 3.02761 l
248.099 3.02880 l
250.665 3.83892 l
253.114 5.42294 l
255.300 7.50274 l
257.759 10.5853 l
260.235 14.4744 l
262.698 19.1166 l
264.982 24.0960 l
267.348 29.9228 l
269.794 36.6498 l
272.232 44.0449 l
274.740 52.3469 l
276.949 60.2229 l
279.435 69.6956 l
281.932 79.8248 l
284.339 90.1417 l
286.524 99.9571 l
289.122 112.147 l
291.323 122.885 l
293.884 135.813 l
296.150 147.614 l
298.637 160.910 l
301.005 173.869 l
303.475 187.660 l
305.744 200.527 l
308.191 214.581 l
310.733 229.323 l
312.946 242.236 l
317.805 270.665 l
320.220 284.743 l
322.557 298.271 l
325.152 313.128 l
327.484 326.284 l
329.973 340.077 l
332.229 352.306 l
334.695 365.333 l
337.016 377.221 l
339.442 389.217 l
341.813 400.475 l
344.296 411.715 l
346.687 421.967 l
349.132 431.824 l
351.557 440.930 l
353.786 448.672 l
356.340 456.770 l
358.624 463.273 l
361.060 469.404 l
363.391 474.463 l
365.979 479.119 l
368.221 482.305 l
370.765 484.944 l
371.924 485.794 l
373.083 486.420 l
374.351 486.846 l
375.619 486.999 l
376.714 486.910 l
377.808 486.614 l
379.054 486.024 l
380.300 485.163 l
382.707 482.728 l
385.113 479.274 l
387.510 474.816 l
389.813 469.580 l
392.302 462.876 l
394.674 455.490 l
397.171 446.682 l
399.431 437.815 l
401.929 427.057 l
404.322 415.841 l
406.709 403.804 l
409.202 390.376 l
411.498 377.283 l
413.850 363.209 l
416.446 346.963 l
418.797 331.688 l
421.202 315.592 l
423.647 298.824 l
425.894 283.143 l
428.290 266.244 l
430.667 249.398 l
433.211 231.428 l
435.455 215.737 l
438.044 197.985 l
440.381 182.439 l
442.693 167.653 l
445.179 152.591 l
447.676 138.543 l
449.947 126.881 l
452.359 115.867 l
454.713 106.686 l
457.264 98.7383 l
459.472 93.7622 l
460.740 91.7832 l
462.008 90.4937 l
462.604 90.1372 l
463.200 89.9460 l
463.796 89.9246 l
464.392 90.0773 l
465.572 90.9108 l
466.753 92.4794 l
467.934 94.8208 l
469.115 97.9708 l
471.525 107.060 l
474.079 120.905 l
476.421 137.750 l
478.733 158.607 l
481.204 185.924 l
483.670 218.766 l
485.995 255.233 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
q
2.00000 w
1.00000 0 0 RG
6.00000 2.05755E-3 482.995 488.998 rc
newpath
8.00000 389.785 m
10.3246 370.814 l
12.3472 355.354 l
14.6219 339.090 l
16.9117 323.871 l
19.1905 309.829 l
21.3034 297.754 l
23.4910 286.171 l
25.7536 275.138 l
28.0088 265.056 l
30.3286 255.598 l
32.3719 248.002 l
34.6722 240.236 l
36.9819 233.238 l
39.2077 227.218 l
41.2290 222.336 l
43.6325 217.223 l
45.6685 213.450 l
48.0369 209.673 l
50.1334 206.852 l
52.4335 204.288 l
54.6238 202.337 l
56.9092 200.781 l
59.0078 199.759 l
60.1396 199.362 l
61.2715 199.067 l
62.4471 198.868 l
63.6228 198.772 l
64.6462 198.771 l
65.6696 198.843 l
67.8803 199.240 l
70.1641 199.977 l
72.3983 200.994 l
74.5601 202.236 l
76.9603 203.889 l
79.1171 205.599 l
81.4199 207.639 l
83.5065 209.661 l
85.7878 212.041 l
87.9343 214.425 l
90.1780 217.051 l
92.3717 219.733 l
94.6682 222.647 l
96.8800 225.539 l
99.1420 228.569 l
101.385 231.631 l
103.446 234.483 l
105.808 237.783 l
107.921 240.751 l
110.174 243.922 l
112.331 246.951 l
114.725 250.295 l
116.798 253.167 l
119.151 256.387 l
121.296 259.276 l
123.642 262.379 l
125.666 265.000 l
127.971 267.913 l
130.198 270.648 l
132.424 273.296 l
134.641 275.843 l
136.771 278.200 l
139.073 280.643 l
141.268 282.864 l
143.577 285.083 l
145.668 286.985 l
147.979 288.964 l
150.192 290.735 l
152.400 292.378 l
154.706 293.959 l
156.830 295.291 l
159.005 296.530 l
161.407 297.749 l
163.582 298.718 l
165.806 299.575 l
168.067 300.306 l
170.146 300.855 l
172.362 301.310 l
174.562 301.628 l
176.914 301.824 l
178.990 301.872 l
181.385 301.786 l
183.547 301.578 l
185.685 301.254 l
187.985 300.775 l
190.294 300.162 l
192.395 299.491 l
194.626 298.663 l
196.803 297.744 l
199.164 296.628 l
201.206 295.563 l
203.552 294.232 l
205.757 292.880 l
207.940 291.447 l
210.126 289.924 l
212.355 288.284 l
214.717 286.455 l
216.884 284.700 l
219.022 282.899 l
221.308 280.904 l
223.589 278.846 l
225.637 276.947 l
228.062 274.639 l
230.091 272.664 l
232.465 270.310 l
234.730 268.024 l
236.753 265.955 l
239.027 263.603 l
241.317 261.213 l
243.596 258.820 l
245.709 256.593 l
247.896 254.284 l
250.159 251.899 l
252.414 249.529 l
254.734 247.106 l
256.777 244.990 l
259.078 242.633 l
261.387 240.299 l
263.613 238.088 l
265.634 236.115 l
268.038 233.821 l
270.074 231.925 l
272.442 229.780 l
274.539 227.941 l
276.839 225.992 l
279.029 224.209 l
281.315 222.429 l
283.413 220.870 l
285.677 219.276 l
288.028 217.720 l
290.075 216.453 l
292.286 215.179 l
294.569 213.970 l
296.804 212.897 l
298.965 211.965 l
301.366 211.056 l
303.522 210.357 l
305.825 209.735 l
307.912 209.285 l
310.193 208.920 l
312.340 208.700 l
314.583 208.598 l
316.777 208.628 l
319.074 208.798 l
321.285 209.097 l
323.547 209.541 l
325.791 210.120 l
327.852 210.774 l
330.214 211.666 l
332.327 212.594 l
334.580 213.718 l
336.736 214.921 l
339.131 216.404 l
341.204 217.810 l
343.557 219.542 l
345.702 221.243 l
348.048 223.235 l
350.072 225.061 l
352.377 227.259 l
354.604 229.496 l
356.829 231.839 l
359.047 234.277 l
361.177 236.710 l
363.479 239.435 l
365.674 242.118 l
367.983 245.025 l
370.074 247.723 l
372.385 250.771 l
374.598 253.746 l
376.806 256.761 l
379.112 259.951 l
381.236 262.915 l
383.411 265.969 l
385.813 269.348 l
387.988 272.404 l
390.211 275.514 l
392.473 278.647 l
394.552 281.489 l
396.768 284.467 l
398.967 287.354 l
401.320 290.353 l
403.396 292.908 l
405.791 295.732 l
407.952 298.149 l
410.091 300.403 l
412.391 302.655 l
414.700 304.717 l
416.801 306.402 l
419.032 307.972 l
421.209 309.268 l
423.570 310.385 l
425.612 311.091 l
426.785 311.380 l
427.957 311.579 l
429.060 311.682 l
430.162 311.701 l
431.254 311.632 l
432.346 311.474 l
433.439 311.225 l
434.532 310.880 l
436.761 309.869 l
439.123 308.322 l
441.290 306.446 l
443.428 304.140 l
445.714 301.146 l
447.995 297.584 l
450.146 293.670 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
q
2.00000 w
0 0 1.00000 RG
6.00000 2.05755E-3 482.995 488.998 rc
newpath
8.00000 255.233 m
10.3246 218.771 l
12.3472 191.409 l
14.6219 165.171 l
16.9117 143.283 l
19.1905 125.683 l
21.3034 112.825 l
23.4910 102.760 l
25.7536 95.5625 l
26.8812 93.1125 l
28.0088 91.3759 l
28.5888 90.7504 l
29.1687 90.3011 l
29.7487 90.0239 l
30.3286 89.9147 l
30.8394 89.9544 l
31.3503 90.1186 l
31.8611 90.4046 l
32.3719 90.8096 l
33.5220 92.1437 l
34.6722 94.0383 l
36.9819 99.4197 l
39.2077 106.422 l
41.2290 114.160 l
43.6325 124.875 l
45.6685 135.082 l
48.0369 148.081 l
50.1334 160.452 l
52.4335 174.804 l
54.6238 189.090 l
56.9092 204.498 l
59.0078 218.986 l
61.2715 234.856 l
63.6228 251.487 l
65.6696 265.991 l
67.8803 281.591 l
70.1641 297.544 l
72.3983 312.905 l
74.5601 327.460 l
76.9603 343.186 l
79.1171 356.859 l
81.4199 370.916 l
83.5065 383.121 l
85.7878 395.834 l
87.9343 407.153 l
90.1780 418.280 l
92.3717 428.427 l
94.6682 438.243 l
96.8800 446.890 l
99.1420 454.893 l
101.385 461.971 l
103.446 467.709 l
105.808 473.374 l
107.921 477.609 l
110.174 481.256 l
112.331 483.908 l
114.725 485.894 l
115.762 486.443 l
116.798 486.805 l
117.975 486.990 l
119.151 486.938 l
120.224 486.685 l
121.296 486.238 l
123.642 484.589 l
125.666 482.439 l
127.971 479.189 l
130.198 475.261 l
132.424 470.583 l
134.641 465.200 l
136.771 459.372 l
139.073 452.378 l
141.268 445.071 l
143.577 436.736 l
145.668 428.650 l
147.979 419.150 l
150.192 409.530 l
152.400 399.461 l
154.706 388.476 l
156.830 377.971 l
159.005 366.861 l
161.407 354.224 l
163.582 342.483 l
165.806 330.221 l
168.067 317.526 l
170.146 305.689 l
172.362 292.932 l
174.562 280.166 l
176.914 266.433 l
181.385 240.271 l
183.547 227.665 l
185.685 215.265 l
187.985 202.045 l
190.294 188.931 l
192.395 177.168 l
194.626 164.887 l
196.803 153.140 l
199.164 140.708 l
201.206 130.231 l
203.552 118.550 l
205.757 107.940 l
207.940 97.8159 l
210.126 88.0884 l
212.355 78.6095 l
214.717 69.0764 l
216.884 60.8233 l
219.022 53.1538 l
221.308 45.4997 l
223.589 38.4426 l
225.637 32.6173 l
228.062 26.3568 l
230.091 21.6642 l
232.465 16.8204 l
234.730 12.8575 l
236.753 9.87219 l
239.027 7.14608 l
241.317 5.08337 l
243.596 3.71469 l
245.709 3.05853 l
247.896 3.00204 l
250.159 3.61044 l
252.414 4.89010 l
254.734 6.90426 l
256.777 9.26043 l
259.078 12.5589 l
261.387 16.5511 l
263.613 21.0335 l
265.634 25.6346 l
268.038 31.7499 l
270.074 37.4657 l
272.442 44.7157 l
274.539 51.6571 l
276.839 59.8201 l
279.029 68.1062 l
281.315 77.2633 l
283.413 86.1119 l
285.677 96.1045 l
288.028 106.949 l
290.075 116.751 l
292.286 127.692 l
294.569 139.350 l
296.804 151.075 l
298.965 162.692 l
301.366 175.869 l
303.522 187.926 l
305.825 200.990 l
307.912 212.969 l
310.193 226.182 l
312.340 238.693 l
316.777 264.656 l
319.074 278.069 l
321.285 290.923 l
323.547 303.962 l
325.791 316.750 l
327.852 328.340 l
330.214 341.396 l
332.327 352.831 l
334.580 364.733 l
336.736 375.810 l
339.131 387.706 l
341.204 397.631 l
343.557 408.433 l
345.702 417.815 l
348.048 427.534 l
350.072 435.434 l
352.377 443.850 l
354.604 451.359 l
356.829 458.224 l
359.047 464.397 l
361.177 469.677 l
363.479 474.639 l
365.674 478.623 l
367.983 482.006 l
370.074 484.332 l
372.385 486.070 l
373.491 486.587 l
374.598 486.897 l
375.702 487.000 l
376.806 486.893 l
377.959 486.557 l
379.112 485.990 l
381.236 484.337 l
383.411 481.823 l
385.813 478.077 l
387.988 473.807 l
390.211 468.578 l
392.473 462.375 l
394.552 455.894 l
396.768 448.174 l
398.967 439.704 l
401.320 429.774 l
403.396 420.287 l
405.791 408.532 l
407.952 397.213 l
410.091 385.386 l
412.391 372.017 l
414.700 357.968 l
416.801 344.692 l
419.032 330.137 l
421.209 315.540 l
423.570 299.358 l
425.612 285.124 l
427.957 268.597 l
432.346 237.522 l
434.532 222.166 l
436.761 206.728 l
439.123 190.742 l
441.290 176.550 l
443.428 163.102 l
445.714 149.484 l
447.995 136.834 l
450.146 125.917 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
8.00000 255.233 m
485.995 255.233 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
360 278 13 15 rc
newpath
366.250 284.250 m
366.458 284.468 366.614 284.692 366.718 284.921  c
366.802 285.067 366.927 285.463 367.093 286.109  c
367.656 285.281 l
367.802 285.072 367.981 284.877 368.195 284.695  c
368.408 284.513 368.593 284.385 368.750 284.312  c
368.854 284.270 368.968 284.250 369.093 284.250  c
369.270 284.250 369.414 284.299 369.523 284.398  c
369.632 284.497 369.687 284.614 369.687 284.750  c
369.687 284.916 369.656 285.031 369.593 285.093  c
369.479 285.197 369.343 285.250 369.187 285.250  c
369.093 285.250 369.000 285.229 368.906 285.187  c
368.708 285.125 368.572 285.093 368.500 285.093  c
368.395 285.093 368.276 285.151 368.140 285.265  c
367.880 285.484 367.567 285.911 367.203 286.546  c
367.718 288.718 l
367.802 289.052 367.869 289.252 367.921 289.320  c
367.974 289.388 368.031 289.421 368.093 289.421  c
368.177 289.421 368.281 289.375 368.406 289.281  c
368.635 289.083 368.833 288.828 369.000 288.515  c
369.218 288.625 l
368.947 289.125 368.609 289.541 368.203 289.875  c
367.974 290.062 367.776 290.156 367.609 290.156  c
367.369 290.156 367.182 290.020 367.046 289.750  c
366.953 289.583 366.770 288.875 366.500 287.625  c
365.833 288.770 365.302 289.505 364.906 289.828  c
364.645 290.046 364.395 290.156 364.156 290.156  c
363.989 290.156 363.833 290.093 363.687 289.968  c
363.593 289.875 363.546 289.750 363.546 289.593  c
363.546 289.458 363.593 289.343 363.687 289.250  c
363.781 289.156 363.895 289.109 364.031 289.109  c
364.166 289.109 364.307 289.177 364.453 289.312  c
364.567 289.406 364.656 289.453 364.718 289.453  c
364.760 289.453 364.822 289.421 364.906 289.359  c
365.104 289.192 365.375 288.843 365.718 288.312  c
366.062 287.781 366.286 287.395 366.390 287.156  c
366.130 286.125 365.989 285.583 365.968 285.531  c
365.875 285.250 365.750 285.052 365.593 284.937  c
365.437 284.822 365.203 284.765 364.890 284.765  c
364.796 284.765 364.687 284.770 364.562 284.781  c
364.562 284.546 l
366.250 284.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
8.00000 255.233 m
8.00000 260.233 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 268 6 13 rc
newpath
16.7968 275.437 m
8.20312 275.437 l
8.20312 274.765 l
16.7968 274.765 l
16.7968 275.437 l
h
f
Q
newpath
15.5312 271.234 m
17.6250 270.218 l
17.8281 270.218 l
17.8281 277.484 l
17.8281 277.963 17.8489 278.263 17.8906 278.382  c
17.9322 278.502 18.0156 278.593 18.1406 278.656  c
18.2656 278.718 18.5208 278.755 18.9062 278.765  c
18.9062 279.000 l
15.6718 279.000 l
15.6718 278.765 l
16.0781 278.755 16.3411 278.718 16.4609 278.656  c
16.5807 278.593 16.6640 278.510 16.7109 278.406  c
16.7578 278.302 16.7812 277.994 16.7812 277.484  c
16.7812 272.843 l
16.7812 272.208 16.7604 271.802 16.7187 271.625  c
16.6875 271.489 16.6328 271.390 16.5546 271.328  c
16.4765 271.265 16.3802 271.234 16.2656 271.234  c
16.1093 271.234 15.8958 271.302 15.6250 271.437  c
15.5312 271.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
127.499 255.233 m
127.499 260.233 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
120 268 6 13 rc
newpath
130.796 275.437 m
122.203 275.437 l
122.203 274.765 l
130.796 274.765 l
130.796 275.437 l
h
f
Q
newpath
128.468 274.750 m
128.468 273.770 128.617 272.924 128.914 272.210  c
129.210 271.497 129.604 270.968 130.093 270.625  c
130.479 270.354 130.875 270.218 131.281 270.218  c
131.937 270.218 132.526 270.552 133.046 271.218  c
133.703 272.052 134.031 273.182 134.031 274.609  c
134.031 275.609 133.888 276.458 133.601 277.156  c
133.315 277.854 132.947 278.362 132.500 278.679  c
132.052 278.997 131.625 279.156 131.218 279.156  c
130.395 279.156 129.708 278.671 129.156 277.703  c
128.697 276.880 128.468 275.895 128.468 274.750  c
h
129.718 274.906 m
129.718 276.093 129.864 277.062 130.156 277.812  c
130.395 278.437 130.755 278.750 131.234 278.750  c
131.463 278.750 131.700 278.648 131.945 278.445  c
132.190 278.242 132.375 277.895 132.500 277.406  c
132.697 276.687 132.796 275.661 132.796 274.328  c
132.796 273.349 132.692 272.531 132.484 271.875  c
132.338 271.385 132.140 271.041 131.890 270.843  c
131.724 270.708 131.515 270.640 131.265 270.640  c
130.984 270.640 130.729 270.765 130.500 271.015  c
130.197 271.369 129.992 271.924 129.882 272.679  c
129.773 273.434 129.718 274.177 129.718 274.906  c
h
136.125 277.765 m
136.322 277.765 136.489 277.835 136.625 277.976  c
136.760 278.117 136.828 278.281 136.828 278.468  c
136.828 278.666 136.760 278.833 136.625 278.968  c
136.489 279.104 136.322 279.171 136.125 279.171  c
135.927 279.171 135.760 279.104 135.625 278.968  c
135.489 278.833 135.421 278.666 135.421 278.468  c
135.421 278.270 135.489 278.104 135.625 277.968  c
135.760 277.833 135.927 277.765 136.125 277.765  c
h
143.390 270.390 m
142.890 271.468 l
140.312 271.468 l
139.750 272.625 l
140.864 272.791 141.750 273.208 142.406 273.875  c
142.968 274.447 143.250 275.125 143.250 275.906  c
143.250 276.364 143.158 276.786 142.976 277.171  c
142.794 277.557 142.562 277.885 142.281 278.156  c
142.000 278.427 141.687 278.640 141.343 278.796  c
140.864 279.036 140.364 279.156 139.843 279.156  c
139.333 279.156 138.960 279.067 138.726 278.890  c
138.492 278.713 138.375 278.520 138.375 278.312  c
138.375 278.187 138.424 278.080 138.523 277.992  c
138.622 277.903 138.744 277.859 138.890 277.859  c
138.994 277.859 139.088 277.875 139.171 277.906  c
139.255 277.937 139.395 278.026 139.593 278.171  c
139.916 278.390 140.239 278.500 140.562 278.500  c
141.062 278.500 141.497 278.312 141.867 277.937  c
142.237 277.562 142.421 277.104 142.421 276.562  c
142.421 276.041 142.255 275.557 141.921 275.109  c
141.588 274.661 141.130 274.312 140.546 274.062  c
140.078 273.875 139.447 273.765 138.656 273.734  c
140.312 270.390 l
143.390 270.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 255.233 m
246.997 260.233 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
243.468 272.750 m
243.468 271.770 243.617 270.924 243.914 270.210  c
244.210 269.497 244.604 268.968 245.093 268.625  c
245.479 268.354 245.875 268.218 246.281 268.218  c
246.937 268.218 247.526 268.552 248.046 269.218  c
248.703 270.052 249.031 271.182 249.031 272.609  c
249.031 273.609 248.888 274.458 248.601 275.156  c
248.315 275.854 247.947 276.362 247.500 276.679  c
247.052 276.997 246.625 277.156 246.218 277.156  c
245.395 277.156 244.708 276.671 244.156 275.703  c
243.697 274.880 243.468 273.895 243.468 272.750  c
h
244.718 272.906 m
244.718 274.093 244.864 275.062 245.156 275.812  c
245.395 276.437 245.755 276.750 246.234 276.750  c
246.463 276.750 246.700 276.648 246.945 276.445  c
247.190 276.242 247.375 275.895 247.500 275.406  c
247.697 274.687 247.796 273.661 247.796 272.328  c
247.796 271.349 247.692 270.531 247.484 269.875  c
247.338 269.385 247.140 269.041 246.890 268.843  c
246.724 268.708 246.515 268.640 246.265 268.640  c
245.984 268.640 245.729 268.765 245.500 269.015  c
245.197 269.369 244.992 269.924 244.882 270.679  c
244.773 271.434 244.718 272.177 244.718 272.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
366.496 255.233 m
366.496 260.233 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
363.468 274.750 m
363.468 273.770 363.617 272.924 363.914 272.210  c
364.210 271.497 364.604 270.968 365.093 270.625  c
365.479 270.354 365.875 270.218 366.281 270.218  c
366.937 270.218 367.526 270.552 368.046 271.218  c
368.703 272.052 369.031 273.182 369.031 274.609  c
369.031 275.609 368.888 276.458 368.601 277.156  c
368.315 277.854 367.947 278.362 367.500 278.679  c
367.052 278.997 366.625 279.156 366.218 279.156  c
365.395 279.156 364.708 278.671 364.156 277.703  c
363.697 276.880 363.468 275.895 363.468 274.750  c
h
364.718 274.906 m
364.718 276.093 364.864 277.062 365.156 277.812  c
365.395 278.437 365.755 278.750 366.234 278.750  c
366.463 278.750 366.700 278.648 366.945 278.445  c
367.190 278.242 367.375 277.895 367.500 277.406  c
367.697 276.687 367.796 275.661 367.796 274.328  c
367.796 273.349 367.692 272.531 367.484 271.875  c
367.338 271.385 367.140 271.041 366.890 270.843  c
366.724 270.708 366.515 270.640 366.265 270.640  c
365.984 270.640 365.729 270.765 365.500 271.015  c
365.197 271.369 364.992 271.924 364.882 272.679  c
364.773 273.434 364.718 274.177 364.718 274.906  c
h
371.125 277.765 m
371.322 277.765 371.489 277.835 371.625 277.976  c
371.760 278.117 371.828 278.281 371.828 278.468  c
371.828 278.666 371.760 278.833 371.625 278.968  c
371.489 279.104 371.322 279.171 371.125 279.171  c
370.927 279.171 370.760 279.104 370.625 278.968  c
370.489 278.833 370.421 278.666 370.421 278.468  c
370.421 278.270 370.489 278.104 370.625 277.968  c
370.760 277.833 370.927 277.765 371.125 277.765  c
h
378.390 270.390 m
377.890 271.468 l
375.312 271.468 l
374.750 272.625 l
375.864 272.791 376.750 273.208 377.406 273.875  c
377.968 274.447 378.250 275.125 378.250 275.906  c
378.250 276.364 378.158 276.786 377.976 277.171  c
377.794 277.557 377.562 277.885 377.281 278.156  c
377.000 278.427 376.687 278.640 376.343 278.796  c
375.864 279.036 375.364 279.156 374.843 279.156  c
374.333 279.156 373.960 279.067 373.726 278.890  c
373.492 278.713 373.375 278.520 373.375 278.312  c
373.375 278.187 373.424 278.080 373.523 277.992  c
373.622 277.903 373.744 277.859 373.890 277.859  c
373.994 277.859 374.088 277.875 374.171 277.906  c
374.255 277.937 374.395 278.026 374.593 278.171  c
374.916 278.390 375.239 278.500 375.562 278.500  c
376.062 278.500 376.497 278.312 376.867 277.937  c
377.237 277.562 377.421 277.104 377.421 276.562  c
377.421 276.041 377.255 275.557 376.921 275.109  c
376.588 274.661 376.130 274.312 375.546 274.062  c
375.078 273.875 374.447 273.765 373.656 273.734  c
375.312 270.390 l
378.390 270.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
485.995 255.233 m
485.995 260.233 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
488.531 271.234 m
490.625 270.218 l
490.828 270.218 l
490.828 277.484 l
490.828 277.963 490.849 278.263 490.890 278.382  c
490.932 278.502 491.015 278.593 491.140 278.656  c
491.265 278.718 491.520 278.755 491.906 278.765  c
491.906 279.000 l
488.671 279.000 l
488.671 278.765 l
489.078 278.755 489.341 278.718 489.460 278.656  c
489.580 278.593 489.664 278.510 489.710 278.406  c
489.757 278.302 489.781 277.994 489.781 277.484  c
489.781 272.843 l
489.781 272.208 489.760 271.802 489.718 271.625  c
489.687 271.489 489.632 271.390 489.554 271.328  c
489.476 271.265 489.380 271.234 489.265 271.234  c
489.109 271.234 488.895 271.302 488.625 271.437  c
488.531 271.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
31.8997 255.233 m
31.8997 257.733 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
55.7995 255.233 m
55.7995 257.733 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
79.6993 255.233 m
79.6993 257.733 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
103.599 255.233 m
103.599 257.733 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
151.398 255.233 m
151.398 257.733 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
175.298 255.233 m
175.298 257.733 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
199.198 255.233 m
199.198 257.733 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
223.098 255.233 m
223.098 257.733 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
270.897 255.233 m
270.897 257.733 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
294.797 255.233 m
294.797 257.733 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
318.697 255.233 m
318.697 257.733 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
342.597 255.233 m
342.597 257.733 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
390.396 255.233 m
390.396 257.733 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
414.296 255.233 m
414.296 257.733 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
438.196 255.233 m
438.196 257.733 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
462.096 255.233 m
462.096 257.733 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
246.997 487.000 m
246.997 3.00204 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
201 122 8 15 rc
Q
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
246.997 457.061 m
241.997 457.061 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
219 456 6 13 rc
newpath
229.796 463.437 m
221.203 463.437 l
221.203 462.765 l
229.796 462.765 l
229.796 463.437 l
h
f
Q
newpath
228.531 459.234 m
230.625 458.218 l
230.828 458.218 l
230.828 465.484 l
230.828 465.963 230.849 466.263 230.890 466.382  c
230.932 466.502 231.015 466.593 231.140 466.656  c
231.265 466.718 231.520 466.755 231.906 466.765  c
231.906 467.000 l
228.671 467.000 l
228.671 466.765 l
229.078 466.755 229.341 466.718 229.460 466.656  c
229.580 466.593 229.664 466.510 229.710 466.406  c
229.757 466.302 229.781 465.994 229.781 465.484  c
229.781 460.843 l
229.781 460.208 229.760 459.802 229.718 459.625  c
229.687 459.489 229.632 459.390 229.554 459.328  c
229.476 459.265 229.380 459.234 229.265 459.234  c
229.109 459.234 228.895 459.302 228.625 459.437  c
228.531 459.234 l
h
235.125 465.765 m
235.322 465.765 235.489 465.835 235.625 465.976  c
235.760 466.117 235.828 466.281 235.828 466.468  c
235.828 466.666 235.760 466.833 235.625 466.968  c
235.489 467.104 235.322 467.171 235.125 467.171  c
234.927 467.171 234.760 467.104 234.625 466.968  c
234.489 466.833 234.421 466.666 234.421 466.468  c
234.421 466.270 234.489 466.104 234.625 465.968  c
234.760 465.833 234.927 465.765 235.125 465.765  c
h
242.390 458.390 m
241.890 459.468 l
239.312 459.468 l
238.750 460.625 l
239.864 460.791 240.750 461.208 241.406 461.875  c
241.968 462.447 242.250 463.125 242.250 463.906  c
242.250 464.364 242.158 464.786 241.976 465.171  c
241.794 465.557 241.562 465.885 241.281 466.156  c
241.000 466.427 240.687 466.640 240.343 466.796  c
239.864 467.036 239.364 467.156 238.843 467.156  c
238.333 467.156 237.960 467.067 237.726 466.890  c
237.492 466.713 237.375 466.520 237.375 466.312  c
237.375 466.187 237.424 466.080 237.523 465.992  c
237.622 465.903 237.744 465.859 237.890 465.859  c
237.994 465.859 238.088 465.875 238.171 465.906  c
238.255 465.937 238.395 466.026 238.593 466.171  c
238.916 466.390 239.239 466.500 239.562 466.500  c
240.062 466.500 240.497 466.312 240.867 465.937  c
241.237 465.562 241.421 465.104 241.421 464.562  c
241.421 464.041 241.255 463.557 240.921 463.109  c
240.588 462.661 240.130 462.312 239.546 462.062  c
239.078 461.875 238.447 461.765 237.656 461.734  c
239.312 458.390 l
242.390 458.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 389.785 m
241.997 389.785 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
229 388 6 13 rc
newpath
239.796 395.437 m
231.203 395.437 l
231.203 394.765 l
239.796 394.765 l
239.796 395.437 l
h
f
Q
newpath
238.531 391.234 m
240.625 390.218 l
240.828 390.218 l
240.828 397.484 l
240.828 397.963 240.849 398.263 240.890 398.382  c
240.932 398.502 241.015 398.593 241.140 398.656  c
241.265 398.718 241.520 398.755 241.906 398.765  c
241.906 399.000 l
238.671 399.000 l
238.671 398.765 l
239.078 398.755 239.341 398.718 239.460 398.656  c
239.580 398.593 239.664 398.510 239.710 398.406  c
239.757 398.302 239.781 397.994 239.781 397.484  c
239.781 392.843 l
239.781 392.208 239.760 391.802 239.718 391.625  c
239.687 391.489 239.632 391.390 239.554 391.328  c
239.476 391.265 239.380 391.234 239.265 391.234  c
239.109 391.234 238.895 391.302 238.625 391.437  c
238.531 391.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 322.509 m
241.997 322.509 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
219 321 6 13 rc
newpath
229.796 328.437 m
221.203 328.437 l
221.203 327.765 l
229.796 327.765 l
229.796 328.437 l
h
f
Q
newpath
227.468 327.750 m
227.468 326.770 227.617 325.924 227.914 325.210  c
228.210 324.497 228.604 323.968 229.093 323.625  c
229.479 323.354 229.875 323.218 230.281 323.218  c
230.937 323.218 231.526 323.552 232.046 324.218  c
232.703 325.052 233.031 326.182 233.031 327.609  c
233.031 328.609 232.888 329.458 232.601 330.156  c
232.315 330.854 231.947 331.362 231.500 331.679  c
231.052 331.997 230.625 332.156 230.218 332.156  c
229.395 332.156 228.708 331.671 228.156 330.703  c
227.697 329.880 227.468 328.895 227.468 327.750  c
h
228.718 327.906 m
228.718 329.093 228.864 330.062 229.156 330.812  c
229.395 331.437 229.755 331.750 230.234 331.750  c
230.463 331.750 230.700 331.648 230.945 331.445  c
231.190 331.242 231.375 330.895 231.500 330.406  c
231.697 329.687 231.796 328.661 231.796 327.328  c
231.796 326.349 231.692 325.531 231.484 324.875  c
231.338 324.385 231.140 324.041 230.890 323.843  c
230.724 323.708 230.515 323.640 230.265 323.640  c
229.984 323.640 229.729 323.765 229.500 324.015  c
229.197 324.369 228.992 324.924 228.882 325.679  c
228.773 326.434 228.718 327.177 228.718 327.906  c
h
235.125 330.765 m
235.322 330.765 235.489 330.835 235.625 330.976  c
235.760 331.117 235.828 331.281 235.828 331.468  c
235.828 331.666 235.760 331.833 235.625 331.968  c
235.489 332.104 235.322 332.171 235.125 332.171  c
234.927 332.171 234.760 332.104 234.625 331.968  c
234.489 331.833 234.421 331.666 234.421 331.468  c
234.421 331.270 234.489 331.104 234.625 330.968  c
234.760 330.833 234.927 330.765 235.125 330.765  c
h
242.390 323.390 m
241.890 324.468 l
239.312 324.468 l
238.750 325.625 l
239.864 325.791 240.750 326.208 241.406 326.875  c
241.968 327.447 242.250 328.125 242.250 328.906  c
242.250 329.364 242.158 329.786 241.976 330.171  c
241.794 330.557 241.562 330.885 241.281 331.156  c
241.000 331.427 240.687 331.640 240.343 331.796  c
239.864 332.036 239.364 332.156 238.843 332.156  c
238.333 332.156 237.960 332.067 237.726 331.890  c
237.492 331.713 237.375 331.520 237.375 331.312  c
237.375 331.187 237.424 331.080 237.523 330.992  c
237.622 330.903 237.744 330.859 237.890 330.859  c
237.994 330.859 238.088 330.875 238.171 330.906  c
238.255 330.937 238.395 331.026 238.593 331.171  c
238.916 331.390 239.239 331.500 239.562 331.500  c
240.062 331.500 240.497 331.312 240.867 330.937  c
241.237 330.562 241.421 330.104 241.421 329.562  c
241.421 329.041 241.255 328.557 240.921 328.109  c
240.588 327.661 240.130 327.312 239.546 327.062  c
239.078 326.875 238.447 326.765 237.656 326.734  c
239.312 323.390 l
242.390 323.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 255.233 m
241.997 255.233 l
S
Q
q
0 w
newpath
246.997 187.957 m
241.997 187.957 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
227.468 192.750 m
227.468 191.770 227.617 190.924 227.914 190.210  c
228.210 189.497 228.604 188.968 229.093 188.625  c
229.479 188.354 229.875 188.218 230.281 188.218  c
230.937 188.218 231.526 188.552 232.046 189.218  c
232.703 190.052 233.031 191.182 233.031 192.609  c
233.031 193.609 232.888 194.458 232.601 195.156  c
232.315 195.854 231.947 196.362 231.500 196.679  c
231.052 196.997 230.625 197.156 230.218 197.156  c
229.395 197.156 228.708 196.671 228.156 195.703  c
227.697 194.880 227.468 193.895 227.468 192.750  c
h
228.718 192.906 m
228.718 194.093 228.864 195.062 229.156 195.812  c
229.395 196.437 229.755 196.750 230.234 196.750  c
230.463 196.750 230.700 196.648 230.945 196.445  c
231.190 196.242 231.375 195.895 231.500 195.406  c
231.697 194.687 231.796 193.661 231.796 192.328  c
231.796 191.349 231.692 190.531 231.484 189.875  c
231.338 189.385 231.140 189.041 230.890 188.843  c
230.724 188.708 230.515 188.640 230.265 188.640  c
229.984 188.640 229.729 188.765 229.500 189.015  c
229.197 189.369 228.992 189.924 228.882 190.679  c
228.773 191.434 228.718 192.177 228.718 192.906  c
h
235.125 195.765 m
235.322 195.765 235.489 195.835 235.625 195.976  c
235.760 196.117 235.828 196.281 235.828 196.468  c
235.828 196.666 235.760 196.833 235.625 196.968  c
235.489 197.104 235.322 197.171 235.125 197.171  c
234.927 197.171 234.760 197.104 234.625 196.968  c
234.489 196.833 234.421 196.666 234.421 196.468  c
234.421 196.270 234.489 196.104 234.625 195.968  c
234.760 195.833 234.927 195.765 235.125 195.765  c
h
242.390 188.390 m
241.890 189.468 l
239.312 189.468 l
238.750 190.625 l
239.864 190.791 240.750 191.208 241.406 191.875  c
241.968 192.447 242.250 193.125 242.250 193.906  c
242.250 194.364 242.158 194.786 241.976 195.171  c
241.794 195.557 241.562 195.885 241.281 196.156  c
241.000 196.427 240.687 196.640 240.343 196.796  c
239.864 197.036 239.364 197.156 238.843 197.156  c
238.333 197.156 237.960 197.067 237.726 196.890  c
237.492 196.713 237.375 196.520 237.375 196.312  c
237.375 196.187 237.424 196.080 237.523 195.992  c
237.622 195.903 237.744 195.859 237.890 195.859  c
237.994 195.859 238.088 195.875 238.171 195.906  c
238.255 195.937 238.395 196.026 238.593 196.171  c
238.916 196.390 239.239 196.500 239.562 196.500  c
240.062 196.500 240.497 196.312 240.867 195.937  c
241.237 195.562 241.421 195.104 241.421 194.562  c
241.421 194.041 241.255 193.557 240.921 193.109  c
240.588 192.661 240.130 192.312 239.546 192.062  c
239.078 191.875 238.447 191.765 237.656 191.734  c
239.312 188.390 l
242.390 188.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 120.681 m
241.997 120.681 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
238.531 122.234 m
240.625 121.218 l
240.828 121.218 l
240.828 128.484 l
240.828 128.963 240.849 129.263 240.890 129.382  c
240.932 129.502 241.015 129.593 241.140 129.656  c
241.265 129.718 241.520 129.755 241.906 129.765  c
241.906 130.000 l
238.671 130.000 l
238.671 129.765 l
239.078 129.755 239.341 129.718 239.460 129.656  c
239.580 129.593 239.664 129.510 239.710 129.406  c
239.757 129.302 239.781 128.994 239.781 128.484  c
239.781 123.843 l
239.781 123.208 239.760 122.802 239.718 122.625  c
239.687 122.489 239.632 122.390 239.554 122.328  c
239.476 122.265 239.380 122.234 239.265 122.234  c
239.109 122.234 238.895 122.302 238.625 122.437  c
238.531 122.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 53.4054 m
241.997 53.4054 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
228.531 55.2343 m
230.625 54.2187 l
230.828 54.2187 l
230.828 61.4843 l
230.828 61.9635 230.849 62.2630 230.890 62.3828  c
230.932 62.5026 231.015 62.5937 231.140 62.6562  c
231.265 62.7187 231.520 62.7552 231.906 62.7656  c
231.906 63.0000 l
228.671 63.0000 l
228.671 62.7656 l
229.078 62.7552 229.341 62.7187 229.460 62.6562  c
229.580 62.5937 229.664 62.5104 229.710 62.4062  c
229.757 62.3020 229.781 61.9947 229.781 61.4843  c
229.781 56.8437 l
229.781 56.2083 229.760 55.8020 229.718 55.6250  c
229.687 55.4895 229.632 55.3906 229.554 55.3281  c
229.476 55.2656 229.380 55.2343 229.265 55.2343  c
229.109 55.2343 228.895 55.3020 228.625 55.4375  c
228.531 55.2343 l
h
235.125 61.7656 m
235.322 61.7656 235.489 61.8359 235.625 61.9765  c
235.760 62.1171 235.828 62.2812 235.828 62.4687  c
235.828 62.6666 235.760 62.8333 235.625 62.9687  c
235.489 63.1041 235.322 63.1718 235.125 63.1718  c
234.927 63.1718 234.760 63.1041 234.625 62.9687  c
234.489 62.8333 234.421 62.6666 234.421 62.4687  c
234.421 62.2708 234.489 62.1041 234.625 61.9687  c
234.760 61.8333 234.927 61.7656 235.125 61.7656  c
h
242.390 54.3906 m
241.890 55.4687 l
239.312 55.4687 l
238.750 56.6250 l
239.864 56.7916 240.750 57.2083 241.406 57.8750  c
241.968 58.4479 242.250 59.1250 242.250 59.9062  c
242.250 60.3645 242.158 60.7864 241.976 61.1718  c
241.794 61.5572 241.562 61.8854 241.281 62.1562  c
241.000 62.4270 240.687 62.6406 240.343 62.7968  c
239.864 63.0364 239.364 63.1562 238.843 63.1562  c
238.333 63.1562 237.960 63.0677 237.726 62.8906  c
237.492 62.7135 237.375 62.5208 237.375 62.3125  c
237.375 62.1875 237.424 62.0807 237.523 61.9921  c
237.622 61.9036 237.744 61.8593 237.890 61.8593  c
237.994 61.8593 238.088 61.8750 238.171 61.9062  c
238.255 61.9375 238.395 62.0260 238.593 62.1718  c
238.916 62.3906 239.239 62.5000 239.562 62.5000  c
240.062 62.5000 240.497 62.3125 240.867 61.9375  c
241.237 61.5625 241.421 61.1041 241.421 60.5625  c
241.421 60.0416 241.255 59.5572 240.921 59.1093  c
240.588 58.6614 240.130 58.3125 239.546 58.0625  c
239.078 57.8750 238.447 57.7656 237.656 57.7343  c
239.312 54.3906 l
242.390 54.3906 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 483.972 m
244.497 483.972 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 470.516 m
244.497 470.516 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 443.606 m
244.497 443.606 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 430.151 m
244.497 430.151 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 416.696 m
244.497 416.696 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 403.240 m
244.497 403.240 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 376.330 m
244.497 376.330 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 362.875 m
244.497 362.875 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 349.420 m
244.497 349.420 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 335.964 m
244.497 335.964 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 309.054 m
244.497 309.054 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 295.599 m
244.497 295.599 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 282.144 m
244.497 282.144 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 268.688 m
244.497 268.688 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 241.778 m
244.497 241.778 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 228.323 m
244.497 228.323 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 214.867 m
244.497 214.867 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 201.412 m
244.497 201.412 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 174.502 m
244.497 174.502 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 161.047 m
244.497 161.047 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 147.591 m
244.497 147.591 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 134.136 m
244.497 134.136 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 107.226 m
244.497 107.226 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 93.7711 m
244.497 93.7711 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 80.3159 m
244.497 80.3159 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 66.8607 m
244.497 66.8607 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 39.9503 m
244.497 39.9503 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 26.4950 m
244.497 26.4950 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 13.0398 m
244.497 13.0398 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 500 500 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
