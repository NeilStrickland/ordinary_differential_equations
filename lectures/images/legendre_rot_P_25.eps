%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Monday, 23 March 2015 00:54:03 o'clock CST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
500 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
500.000 0 l
500.000 500.000 l
0 500.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 490 490 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
1.00000 0.701961 0.701961 RG
7.00000 1.00205 480.995 487.998 rc
newpath
8.00000 390.594 m
10.5131 370.101 l
12.6997 353.493 l
15.1588 336.120 l
17.6342 319.971 l
20.0979 305.174 l
22.3820 292.544 l
24.7471 280.522 l
27.1930 269.169 l
29.6312 258.896 l
32.1391 249.364 l
34.3480 241.796 l
36.8348 234.161 l
39.3318 227.389 l
41.7381 221.667 l
43.9232 217.120 l
46.5216 212.473 l
48.7227 209.149 l
51.2832 205.947 l
53.5496 203.676 l
56.0363 201.755 l
58.4041 200.448 l
60.8748 199.591 l
63.1436 199.230 l
65.5908 199.266 l
68.1328 199.738 l
70.3455 200.482 l
72.7354 201.607 l
75.2044 203.091 l
77.6198 204.833 l
79.9568 206.765 l
82.5517 209.167 l
84.8833 211.533 l
87.3728 214.250 l
89.6287 216.862 l
92.0949 219.861 l
94.4155 222.799 l
96.8411 225.971 l
99.2126 229.154 l
101.695 232.555 l
104.086 235.878 l
106.531 239.308 l
111.185 245.866 l
113.739 249.451 l
116.023 252.633 l
118.459 255.987 l
120.790 259.148 l
123.378 262.590 l
125.620 265.502 l
128.164 268.720 l
130.482 271.564 l
133.018 274.568 l
135.207 277.063 l
137.699 279.788 l
140.106 282.296 l
142.512 284.674 l
144.909 286.911 l
147.212 288.930 l
149.701 290.965 l
152.073 292.759 l
154.570 294.489 l
156.831 295.913 l
159.329 297.328 l
161.721 298.524 l
164.108 299.562 l
166.601 300.479 l
168.897 301.172 l
171.249 301.732 l
173.846 302.173 l
176.196 302.415 l
178.601 302.507 l
181.046 302.442 l
183.293 302.243 l
185.689 301.887 l
188.067 301.389 l
190.610 300.700 l
192.854 299.960 l
195.443 298.959 l
197.780 297.923 l
200.092 296.778 l
202.578 295.419 l
205.075 293.926 l
207.346 292.461 l
209.758 290.798 l
212.112 289.075 l
214.663 287.102 l
216.871 285.311 l
219.407 283.165 l
221.791 281.066 l
224.152 278.918 l
226.514 276.703 l
228.924 274.384 l
231.478 271.869 l
233.820 269.516 l
236.132 267.157 l
238.604 264.603 l
241.069 262.028 l
243.283 259.700 l
245.905 256.932 l
248.099 254.611 l
250.665 251.902 l
253.114 249.327 l
255.300 247.044 l
257.759 244.501 l
260.235 241.975 l
262.698 239.503 l
264.982 237.254 l
267.348 234.976 l
269.794 232.680 l
272.232 230.461 l
274.740 228.256 l
276.949 226.386 l
279.435 224.368 l
281.932 222.440 l
284.339 220.681 l
286.524 219.175 l
289.122 217.500 l
291.323 216.186 l
293.884 214.783 l
296.150 213.659 l
298.637 212.557 l
301.005 211.640 l
303.475 210.825 l
305.744 210.208 l
308.191 209.686 l
310.733 209.305 l
312.946 209.110 l
315.336 209.045 l
317.805 209.138 l
320.220 209.388 l
322.557 209.782 l
325.152 210.395 l
327.484 211.103 l
329.973 212.025 l
332.229 213.007 l
334.695 214.240 l
337.016 215.550 l
339.442 217.074 l
341.813 218.715 l
344.296 220.588 l
346.687 222.541 l
349.132 224.683 l
351.557 226.949 l
353.786 229.151 l
356.340 231.810 l
358.624 234.305 l
361.060 237.080 l
363.391 239.841 l
365.979 243.016 l
368.221 245.851 l
370.765 249.157 l
373.083 252.240 l
375.619 255.679 l
377.808 258.691 l
380.300 262.162 l
382.707 265.541 l
387.510 272.309 l
389.813 275.540 l
392.302 279.000 l
394.674 282.250 l
397.171 285.603 l
399.431 288.561 l
401.929 291.727 l
404.322 294.637 l
406.709 297.399 l
409.202 300.114 l
411.498 302.438 l
413.850 304.621 l
416.446 306.774 l
418.797 308.465 l
421.202 309.913 l
423.647 311.068 l
425.894 311.822 l
428.290 312.273 l
429.479 312.354 l
430.667 312.334 l
431.939 312.198 l
433.211 311.938 l
435.455 311.164 l
438.044 309.740 l
440.381 307.933 l
442.693 305.626 l
445.179 302.532 l
447.676 298.746 l
449.947 294.674 l
452.359 289.658 l
454.713 284.038 l
457.264 277.090 l
459.472 270.323 l
462.008 261.640 l
464.392 252.546 l
466.753 242.603 l
469.115 231.676 l
471.525 219.477 l
474.079 205.329 l
476.421 191.204 l
478.733 176.133 l
481.204 158.728 l
483.670 139.970 l
485.995 120.958 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
q
0.701961 0.850980 0.701961 RG
7.00000 1.00205 480.995 487.998 rc
newpath
8.00000 255.776 m
10.5131 216.519 l
12.6997 187.445 l
15.1588 159.998 l
17.6342 137.576 l
20.0979 120.044 l
22.3820 107.716 l
24.7471 98.6112 l
25.9701 95.2619 l
27.1930 92.7839 l
27.8026 91.8615 l
28.4121 91.1405 l
29.0216 90.6160 l
29.6312 90.2830 l
30.2581 90.1355 l
30.8851 90.1805 l
31.5121 90.4131 l
32.1391 90.8281 l
33.2435 91.9882 l
34.3480 93.6727 l
36.8348 99.2518 l
39.3318 107.110 l
41.7381 116.568 l
43.9232 126.561 l
46.5216 139.948 l
48.7227 152.385 l
51.2832 167.904 l
53.5496 182.415 l
56.0363 198.992 l
58.4041 215.255 l
60.8748 232.559 l
63.1436 248.620 l
65.5908 265.996 l
68.1328 283.963 l
70.3455 299.431 l
72.7354 315.858 l
75.2044 332.424 l
77.6198 348.140 l
79.9568 362.807 l
82.5517 378.387 l
84.8833 391.686 l
87.3728 405.092 l
89.6287 416.484 l
92.0949 428.070 l
94.4155 438.106 l
96.8411 447.666 l
99.2126 456.066 l
101.695 463.834 l
104.086 470.306 l
106.531 475.888 l
108.957 480.382 l
111.185 483.593 l
113.739 486.194 l
114.881 486.987 l
116.023 487.551 l
117.241 487.903 l
118.459 487.998 l
119.624 487.851 l
120.790 487.472 l
122.084 486.784 l
123.378 485.815 l
125.620 483.487 l
128.164 479.865 l
130.482 475.681 l
133.018 470.174 l
135.207 464.667 l
137.699 457.578 l
140.106 449.940 l
142.512 441.569 l
144.909 432.535 l
147.212 423.241 l
149.701 412.559 l
152.073 401.809 l
154.570 389.943 l
156.831 378.754 l
159.329 365.942 l
161.721 353.279 l
164.108 340.312 l
166.601 326.462 l
168.897 313.473 l
171.249 299.987 l
173.846 284.932 l
176.196 271.201 l
181.046 242.771 l
183.293 229.631 l
185.689 215.707 l
188.067 202.016 l
190.610 187.561 l
192.854 175.007 l
195.443 160.804 l
197.780 148.286 l
200.092 136.218 l
202.578 123.630 l
205.075 111.439 l
207.346 100.769 l
209.758 89.9114 l
212.112 79.8157 l
214.663 69.4634 l
216.871 61.0283 l
219.407 51.9664 l
221.791 44.0831 l
224.152 36.9055 l
226.514 30.3694 l
228.924 24.3886 l
231.478 18.8241 l
233.820 14.4380 l
236.132 10.7922 l
238.604 7.65695 l
241.069 5.32260 l
243.283 3.90866 l
245.905 3.07247 l
248.099 3.07370 l
250.665 3.88540 l
253.114 5.47256 l
255.300 7.55642 l
257.759 10.6450 l
260.235 14.5419 l
262.698 19.1933 l
264.982 24.1825 l
267.348 30.0208 l
269.794 36.7611 l
272.232 44.1708 l
274.740 52.4892 l
276.949 60.3807 l
279.435 69.8721 l
281.932 80.0213 l
284.339 90.3586 l
286.524 100.193 l
289.122 112.407 l
291.323 123.167 l
293.884 136.120 l
296.150 147.944 l
298.637 161.266 l
301.005 174.251 l
303.475 188.069 l
305.744 200.961 l
308.191 215.043 l
310.733 229.815 l
312.946 242.753 l
317.805 271.238 l
320.220 285.345 l
322.557 298.898 l
325.152 313.785 l
327.484 326.967 l
329.973 340.787 l
332.229 353.040 l
334.695 366.094 l
337.016 378.005 l
339.442 390.025 l
341.813 401.305 l
344.296 412.567 l
346.687 422.839 l
349.132 432.716 l
351.557 441.839 l
353.786 449.597 l
356.340 457.710 l
358.624 464.227 l
361.060 470.370 l
363.391 475.439 l
365.979 480.104 l
368.221 483.296 l
370.765 485.940 l
371.924 486.792 l
373.083 487.420 l
374.351 487.846 l
375.619 488.000 l
376.714 487.910 l
377.808 487.613 l
379.054 487.022 l
380.300 486.159 l
382.707 483.720 l
385.113 480.259 l
387.510 475.792 l
389.813 470.546 l
392.302 463.829 l
394.674 456.428 l
397.171 447.603 l
399.431 438.719 l
401.929 427.939 l
404.322 416.701 l
406.709 404.641 l
409.202 391.185 l
411.498 378.066 l
413.850 363.965 l
416.446 347.687 l
418.797 332.381 l
421.202 316.254 l
423.647 299.453 l
425.894 283.741 l
428.290 266.809 l
430.667 249.929 l
433.211 231.924 l
435.455 216.202 l
438.044 198.414 l
440.381 182.838 l
442.693 168.023 l
445.179 152.931 l
447.676 138.855 l
449.947 127.170 l
452.359 116.134 l
454.713 106.935 l
457.264 98.9721 l
459.472 93.9863 l
460.740 92.0033 l
462.008 90.7112 l
462.604 90.3540 l
463.200 90.1625 l
463.796 90.1410 l
464.392 90.2940 l
465.572 91.1292 l
466.753 92.7009 l
467.934 95.0469 l
469.115 98.2031 l
471.525 107.310 l
474.079 121.182 l
476.421 138.061 l
478.733 158.959 l
481.204 186.330 l
483.670 219.236 l
485.995 255.776 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
q
2.00000 w
1.00000 0 0 RG
6.00000 2.05326E-3 482.995 489.998 rc
newpath
8.00000 390.594 m
9.57069 377.606 l
10.9373 366.791 l
12.4743 355.154 l
14.0214 343.988 l
15.5612 333.406 l
16.9887 324.056 l
18.4669 314.830 l
19.9956 305.764 l
21.5195 297.193 l
23.0869 288.850 l
24.4675 281.888 l
26.0217 274.471 l
27.5823 267.460 l
29.0863 261.104 l
30.4520 255.663 l
32.0760 249.591 l
33.4517 244.776 l
35.0520 239.542 l
36.4685 235.229 l
38.0226 230.831 l
39.5026 226.957 l
41.0467 223.233 l
42.4647 220.088 l
43.9942 216.982 l
45.5830 214.059 l
46.9660 211.758 l
48.4596 209.518 l
50.0027 207.461 l
51.5124 205.694 l
52.9730 204.205 l
54.5948 202.798 l
56.0521 201.745 l
57.6080 200.833 l
59.0179 200.188 l
60.5593 199.673 l
62.0096 199.361 l
63.5257 199.207 l
65.0079 199.219 l
66.5596 199.396 l
68.0541 199.718 l
69.5824 200.192 l
71.0981 200.802 l
72.4908 201.477 l
74.0870 202.381 l
75.5147 203.300 l
77.0370 204.388 l
78.4939 205.528 l
80.1117 206.901 l
81.5126 208.175 l
83.1026 209.709 l
84.5517 211.185 l
86.1368 212.878 l
87.5045 214.399 l
89.0621 216.194 l
90.5667 217.987 l
92.0703 219.830 l
93.5683 221.715 l
95.0075 223.564 l
96.5633 225.603 l
98.0461 227.580 l
99.6066 229.690 l
101.019 231.623 l
102.580 233.780 l
104.076 235.863 l
105.567 237.953 l
107.126 240.144 l
111.653 246.525 l
113.123 248.588 l
114.625 250.690 l
116.153 252.814 l
117.558 254.752 l
119.055 256.801 l
120.541 258.814 l
122.131 260.941 l
123.534 262.794 l
125.152 264.900 l
126.612 266.770 l
128.057 268.588 l
129.611 270.507 l
131.172 272.392 l
132.591 274.070 l
134.099 275.811 l
135.570 277.468 l
137.164 279.215 l
138.544 280.683 l
140.129 282.320 l
141.619 283.807 l
143.095 285.230 l
144.571 286.604 l
146.077 287.951 l
147.674 289.319 l
149.138 290.518 l
150.582 291.648 l
152.127 292.797 l
153.668 293.883 l
155.052 294.803 l
156.690 295.828 l
158.061 296.631 l
159.665 297.505 l
161.196 298.275 l
162.562 298.908 l
164.099 299.559 l
165.647 300.148 l
167.186 300.669 l
168.614 301.094 l
170.092 301.475 l
171.621 301.806 l
173.145 302.072 l
174.712 302.280 l
176.093 302.407 l
177.647 302.489 l
179.207 302.506 l
180.711 302.460 l
182.077 302.367 l
183.701 302.193 l
185.077 301.992 l
186.677 301.697 l
188.094 301.382 l
189.648 300.979 l
191.128 300.540 l
192.672 300.025 l
194.090 299.502 l
195.619 298.885 l
197.208 298.188 l
198.591 297.535 l
200.085 296.782 l
201.628 295.954 l
203.138 295.096 l
204.598 294.221 l
206.220 293.200 l
207.677 292.239 l
209.233 291.169 l
210.643 290.162 l
212.184 289.021 l
213.635 287.910 l
215.151 286.713 l
216.633 285.508 l
218.185 284.211 l
219.679 282.929 l
221.208 281.587 l
222.723 280.226 l
224.116 278.951 l
225.712 277.462 l
227.140 276.106 l
228.662 274.639 l
230.119 273.214 l
231.737 271.611 l
233.138 270.206 l
234.728 268.594 l
236.177 267.111 l
237.762 265.476 l
239.130 264.056 l
240.687 262.428 l
242.192 260.849 l
243.695 259.265 l
245.193 257.683 l
249.671 252.950 l
251.232 251.304 l
252.644 249.819 l
254.206 248.184 l
255.701 246.627 l
257.193 245.084 l
258.751 243.484 l
260.186 242.024 l
261.656 240.543 l
263.279 238.927 l
264.748 237.482 l
266.251 236.025 l
267.779 234.566 l
269.184 233.246 l
270.681 231.864 l
272.167 230.519 l
273.757 229.111 l
275.159 227.896 l
276.778 226.528 l
278.238 225.328 l
279.683 224.172 l
281.237 222.966 l
282.797 221.796 l
284.217 220.768 l
285.724 219.716 l
287.195 218.729 l
288.790 217.707 l
290.170 216.862 l
291.755 215.940 l
293.245 215.120 l
294.720 214.355 l
296.197 213.637 l
297.703 212.955 l
299.299 212.287 l
300.763 211.728 l
302.208 211.225 l
303.753 210.743 l
305.294 210.320 l
306.747 209.975 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
q
2.00000 w
0 0 1.00000 RG
6.00000 2.05326E-3 482.995 489.998 rc
newpath
8.00000 255.776 m
9.57069 230.485 l
10.9373 210.520 l
12.4743 190.234 l
14.0214 172.027 l
15.5612 156.009 l
16.9887 142.942 l
18.4669 131.136 l
19.9956 120.681 l
21.5195 111.947 l
23.0869 104.626 l
24.4675 99.5036 l
26.0217 95.1398 l
27.5823 92.1713 l
28.3343 91.2215 l
29.0863 90.5716 l
29.7691 90.2338 l
30.4520 90.1291 l
31.2640 90.2990 l
32.0760 90.7783 l
32.7638 91.4184 l
33.4517 92.2663 l
35.0520 95.0081 l
36.4685 98.2825 l
38.0226 102.725 l
39.5026 107.723 l
41.0467 113.675 l
42.4647 119.752 l
43.9942 126.906 l
45.5830 134.939 l
46.9660 142.384 l
48.4596 150.851 l
50.0027 160.014 l
51.5124 169.341 l
52.9730 178.663 l
54.5948 189.309 l
56.0521 199.099 l
57.6080 209.744 l
59.0179 219.527 l
60.5593 230.336 l
62.0096 240.580 l
63.5257 251.333 l
65.0079 261.859 l
66.5596 272.860 l
68.0541 283.409 l
69.5824 294.120 l
71.0981 304.639 l
72.4908 314.193 l
74.0870 324.984 l
75.5147 334.472 l
77.0370 344.397 l
78.4939 353.692 l
80.1117 363.758 l
81.5126 372.242 l
83.1026 381.591 l
84.5517 389.837 l
86.1368 398.542 l
87.5045 405.777 l
89.0621 413.692 l
90.5667 420.999 l
92.0703 427.959 l
93.5683 434.541 l
95.0075 440.528 l
96.5633 446.620 l
98.0461 452.053 l
99.6066 457.370 l
101.019 461.824 l
102.580 466.347 l
104.076 470.280 l
105.567 473.814 l
107.126 477.085 l
108.561 479.719 l
110.030 482.039 l
111.653 484.156 l
113.123 485.672 l
114.625 486.829 l
116.153 487.601 l
117.558 487.952 l
119.055 487.952 l
120.541 487.572 l
122.131 486.754 l
123.534 485.681 l
125.152 484.041 l
126.612 482.196 l
128.057 480.036 l
129.611 477.350 l
131.172 474.280 l
132.591 471.169 l
134.099 467.542 l
135.570 463.688 l
137.164 459.170 l
138.544 454.982 l
140.129 449.864 l
141.619 444.760 l
143.095 439.436 l
144.571 433.848 l
146.077 427.892 l
147.674 421.306 l
149.138 415.032 l
150.582 408.627 l
152.127 401.560 l
153.668 394.292 l
155.052 387.594 l
156.690 379.460 l
158.061 372.496 l
159.665 364.183 l
161.196 356.090 l
162.562 348.745 l
164.099 340.360 l
165.647 331.799 l
167.186 323.171 l
168.614 315.087 l
170.092 306.643 l
171.621 297.840 l
173.145 289.009 l
174.712 279.879 l
176.093 271.808 l
177.647 262.702 l
180.711 244.730 l
182.077 236.734 l
183.701 227.253 l
185.077 219.254 l
186.677 209.999 l
188.094 201.861 l
189.648 193.002 l
191.128 184.645 l
192.672 176.018 l
194.090 168.188 l
195.619 159.851 l
197.208 151.322 l
198.591 144.016 l
200.085 136.256 l
201.628 128.393 l
203.138 120.860 l
204.598 113.730 l
206.220 106.007 l
207.677 99.2487 l
209.233 92.2309 l
210.643 86.0557 l
212.184 79.5124 l
213.635 73.5607 l
215.151 67.5589 l
216.633 61.9147 l
218.185 56.2493 l
219.679 51.0349 l
221.208 45.9541 l
222.723 41.1725 l
224.116 37.0092 l
225.712 32.5145 l
227.140 28.7493 l
228.662 25.0044 l
230.119 21.6847 l
231.737 18.3059 l
233.138 15.6448 l
234.728 12.9254 l
236.177 10.7284 l
237.762 8.63559 l
239.130 7.09207 l
240.687 5.63220 l
242.192 4.52481 l
243.695 3.71667 l
245.193 3.20919 l
246.633 3.00204 l
248.188 3.08734 l
249.671 3.46765 l
251.232 4.18252 l
252.644 5.10726 l
254.206 6.43505 l
255.701 8.00637 l
257.193 9.86422 l
258.751 12.1121 l
260.186 14.4581 l
261.656 17.1320 l
263.279 20.4000 l
264.748 23.6410 l
266.251 27.2294 l
267.779 31.1583 l
269.184 35.0147 l
270.681 39.3795 l
272.167 43.9655 l
273.757 49.1458 l
275.159 53.9481 l
276.778 59.7514 l
278.238 65.2237 l
279.683 70.8520 l
281.237 77.1347 l
282.797 83.6755 l
284.217 89.8223 l
285.724 96.5469 l
287.195 103.297 l
288.790 110.816 l
290.170 117.484 l
291.755 125.318 l
293.245 132.845 l
294.720 140.447 l
296.197 148.191 l
297.703 156.223 l
299.299 164.872 l
300.763 172.914 l
302.208 180.950 l
303.753 189.635 l
305.294 198.389 l
306.747 206.713 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
8.00000 255.776 m
485.995 255.776 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
360 278 13 15 rc
newpath
366.250 284.250 m
366.458 284.468 366.614 284.692 366.718 284.921  c
366.802 285.067 366.927 285.463 367.093 286.109  c
367.656 285.281 l
367.802 285.072 367.981 284.877 368.195 284.695  c
368.408 284.513 368.593 284.385 368.750 284.312  c
368.854 284.270 368.968 284.250 369.093 284.250  c
369.270 284.250 369.414 284.299 369.523 284.398  c
369.632 284.497 369.687 284.614 369.687 284.750  c
369.687 284.916 369.656 285.031 369.593 285.093  c
369.479 285.197 369.343 285.250 369.187 285.250  c
369.093 285.250 369.000 285.229 368.906 285.187  c
368.708 285.125 368.572 285.093 368.500 285.093  c
368.395 285.093 368.276 285.151 368.140 285.265  c
367.880 285.484 367.567 285.911 367.203 286.546  c
367.718 288.718 l
367.802 289.052 367.869 289.252 367.921 289.320  c
367.974 289.388 368.031 289.421 368.093 289.421  c
368.177 289.421 368.281 289.375 368.406 289.281  c
368.635 289.083 368.833 288.828 369.000 288.515  c
369.218 288.625 l
368.947 289.125 368.609 289.541 368.203 289.875  c
367.974 290.062 367.776 290.156 367.609 290.156  c
367.369 290.156 367.182 290.020 367.046 289.750  c
366.953 289.583 366.770 288.875 366.500 287.625  c
365.833 288.770 365.302 289.505 364.906 289.828  c
364.645 290.046 364.395 290.156 364.156 290.156  c
363.989 290.156 363.833 290.093 363.687 289.968  c
363.593 289.875 363.546 289.750 363.546 289.593  c
363.546 289.458 363.593 289.343 363.687 289.250  c
363.781 289.156 363.895 289.109 364.031 289.109  c
364.166 289.109 364.307 289.177 364.453 289.312  c
364.567 289.406 364.656 289.453 364.718 289.453  c
364.760 289.453 364.822 289.421 364.906 289.359  c
365.104 289.192 365.375 288.843 365.718 288.312  c
366.062 287.781 366.286 287.395 366.390 287.156  c
366.130 286.125 365.989 285.583 365.968 285.531  c
365.875 285.250 365.750 285.052 365.593 284.937  c
365.437 284.822 365.203 284.765 364.890 284.765  c
364.796 284.765 364.687 284.770 364.562 284.781  c
364.562 284.546 l
366.250 284.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
8.00000 255.776 m
8.00000 260.776 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 268 6 13 rc
newpath
16.7968 275.437 m
8.20312 275.437 l
8.20312 274.765 l
16.7968 274.765 l
16.7968 275.437 l
h
f
Q
newpath
15.5312 271.234 m
17.6250 270.218 l
17.8281 270.218 l
17.8281 277.484 l
17.8281 277.963 17.8489 278.263 17.8906 278.382  c
17.9322 278.502 18.0156 278.593 18.1406 278.656  c
18.2656 278.718 18.5208 278.755 18.9062 278.765  c
18.9062 279.000 l
15.6718 279.000 l
15.6718 278.765 l
16.0781 278.755 16.3411 278.718 16.4609 278.656  c
16.5807 278.593 16.6640 278.510 16.7109 278.406  c
16.7578 278.302 16.7812 277.994 16.7812 277.484  c
16.7812 272.843 l
16.7812 272.208 16.7604 271.802 16.7187 271.625  c
16.6875 271.489 16.6328 271.390 16.5546 271.328  c
16.4765 271.265 16.3802 271.234 16.2656 271.234  c
16.1093 271.234 15.8958 271.302 15.6250 271.437  c
15.5312 271.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
127.499 255.776 m
127.499 260.776 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
120 268 6 13 rc
newpath
130.796 275.437 m
122.203 275.437 l
122.203 274.765 l
130.796 274.765 l
130.796 275.437 l
h
f
Q
newpath
128.468 274.750 m
128.468 273.770 128.617 272.924 128.914 272.210  c
129.210 271.497 129.604 270.968 130.093 270.625  c
130.479 270.354 130.875 270.218 131.281 270.218  c
131.937 270.218 132.526 270.552 133.046 271.218  c
133.703 272.052 134.031 273.182 134.031 274.609  c
134.031 275.609 133.888 276.458 133.601 277.156  c
133.315 277.854 132.947 278.362 132.500 278.679  c
132.052 278.997 131.625 279.156 131.218 279.156  c
130.395 279.156 129.708 278.671 129.156 277.703  c
128.697 276.880 128.468 275.895 128.468 274.750  c
h
129.718 274.906 m
129.718 276.093 129.864 277.062 130.156 277.812  c
130.395 278.437 130.755 278.750 131.234 278.750  c
131.463 278.750 131.700 278.648 131.945 278.445  c
132.190 278.242 132.375 277.895 132.500 277.406  c
132.697 276.687 132.796 275.661 132.796 274.328  c
132.796 273.349 132.692 272.531 132.484 271.875  c
132.338 271.385 132.140 271.041 131.890 270.843  c
131.724 270.708 131.515 270.640 131.265 270.640  c
130.984 270.640 130.729 270.765 130.500 271.015  c
130.197 271.369 129.992 271.924 129.882 272.679  c
129.773 273.434 129.718 274.177 129.718 274.906  c
h
136.125 277.765 m
136.322 277.765 136.489 277.835 136.625 277.976  c
136.760 278.117 136.828 278.281 136.828 278.468  c
136.828 278.666 136.760 278.833 136.625 278.968  c
136.489 279.104 136.322 279.171 136.125 279.171  c
135.927 279.171 135.760 279.104 135.625 278.968  c
135.489 278.833 135.421 278.666 135.421 278.468  c
135.421 278.270 135.489 278.104 135.625 277.968  c
135.760 277.833 135.927 277.765 136.125 277.765  c
h
143.390 270.390 m
142.890 271.468 l
140.312 271.468 l
139.750 272.625 l
140.864 272.791 141.750 273.208 142.406 273.875  c
142.968 274.447 143.250 275.125 143.250 275.906  c
143.250 276.364 143.158 276.786 142.976 277.171  c
142.794 277.557 142.562 277.885 142.281 278.156  c
142.000 278.427 141.687 278.640 141.343 278.796  c
140.864 279.036 140.364 279.156 139.843 279.156  c
139.333 279.156 138.960 279.067 138.726 278.890  c
138.492 278.713 138.375 278.520 138.375 278.312  c
138.375 278.187 138.424 278.080 138.523 277.992  c
138.622 277.903 138.744 277.859 138.890 277.859  c
138.994 277.859 139.088 277.875 139.171 277.906  c
139.255 277.937 139.395 278.026 139.593 278.171  c
139.916 278.390 140.239 278.500 140.562 278.500  c
141.062 278.500 141.497 278.312 141.867 277.937  c
142.237 277.562 142.421 277.104 142.421 276.562  c
142.421 276.041 142.255 275.557 141.921 275.109  c
141.588 274.661 141.130 274.312 140.546 274.062  c
140.078 273.875 139.447 273.765 138.656 273.734  c
140.312 270.390 l
143.390 270.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 255.776 m
246.997 260.776 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
243.468 272.750 m
243.468 271.770 243.617 270.924 243.914 270.210  c
244.210 269.497 244.604 268.968 245.093 268.625  c
245.479 268.354 245.875 268.218 246.281 268.218  c
246.937 268.218 247.526 268.552 248.046 269.218  c
248.703 270.052 249.031 271.182 249.031 272.609  c
249.031 273.609 248.888 274.458 248.601 275.156  c
248.315 275.854 247.947 276.362 247.500 276.679  c
247.052 276.997 246.625 277.156 246.218 277.156  c
245.395 277.156 244.708 276.671 244.156 275.703  c
243.697 274.880 243.468 273.895 243.468 272.750  c
h
244.718 272.906 m
244.718 274.093 244.864 275.062 245.156 275.812  c
245.395 276.437 245.755 276.750 246.234 276.750  c
246.463 276.750 246.700 276.648 246.945 276.445  c
247.190 276.242 247.375 275.895 247.500 275.406  c
247.697 274.687 247.796 273.661 247.796 272.328  c
247.796 271.349 247.692 270.531 247.484 269.875  c
247.338 269.385 247.140 269.041 246.890 268.843  c
246.724 268.708 246.515 268.640 246.265 268.640  c
245.984 268.640 245.729 268.765 245.500 269.015  c
245.197 269.369 244.992 269.924 244.882 270.679  c
244.773 271.434 244.718 272.177 244.718 272.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
366.496 255.776 m
366.496 260.776 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
363.468 274.750 m
363.468 273.770 363.617 272.924 363.914 272.210  c
364.210 271.497 364.604 270.968 365.093 270.625  c
365.479 270.354 365.875 270.218 366.281 270.218  c
366.937 270.218 367.526 270.552 368.046 271.218  c
368.703 272.052 369.031 273.182 369.031 274.609  c
369.031 275.609 368.888 276.458 368.601 277.156  c
368.315 277.854 367.947 278.362 367.500 278.679  c
367.052 278.997 366.625 279.156 366.218 279.156  c
365.395 279.156 364.708 278.671 364.156 277.703  c
363.697 276.880 363.468 275.895 363.468 274.750  c
h
364.718 274.906 m
364.718 276.093 364.864 277.062 365.156 277.812  c
365.395 278.437 365.755 278.750 366.234 278.750  c
366.463 278.750 366.700 278.648 366.945 278.445  c
367.190 278.242 367.375 277.895 367.500 277.406  c
367.697 276.687 367.796 275.661 367.796 274.328  c
367.796 273.349 367.692 272.531 367.484 271.875  c
367.338 271.385 367.140 271.041 366.890 270.843  c
366.724 270.708 366.515 270.640 366.265 270.640  c
365.984 270.640 365.729 270.765 365.500 271.015  c
365.197 271.369 364.992 271.924 364.882 272.679  c
364.773 273.434 364.718 274.177 364.718 274.906  c
h
371.125 277.765 m
371.322 277.765 371.489 277.835 371.625 277.976  c
371.760 278.117 371.828 278.281 371.828 278.468  c
371.828 278.666 371.760 278.833 371.625 278.968  c
371.489 279.104 371.322 279.171 371.125 279.171  c
370.927 279.171 370.760 279.104 370.625 278.968  c
370.489 278.833 370.421 278.666 370.421 278.468  c
370.421 278.270 370.489 278.104 370.625 277.968  c
370.760 277.833 370.927 277.765 371.125 277.765  c
h
378.390 270.390 m
377.890 271.468 l
375.312 271.468 l
374.750 272.625 l
375.864 272.791 376.750 273.208 377.406 273.875  c
377.968 274.447 378.250 275.125 378.250 275.906  c
378.250 276.364 378.158 276.786 377.976 277.171  c
377.794 277.557 377.562 277.885 377.281 278.156  c
377.000 278.427 376.687 278.640 376.343 278.796  c
375.864 279.036 375.364 279.156 374.843 279.156  c
374.333 279.156 373.960 279.067 373.726 278.890  c
373.492 278.713 373.375 278.520 373.375 278.312  c
373.375 278.187 373.424 278.080 373.523 277.992  c
373.622 277.903 373.744 277.859 373.890 277.859  c
373.994 277.859 374.088 277.875 374.171 277.906  c
374.255 277.937 374.395 278.026 374.593 278.171  c
374.916 278.390 375.239 278.500 375.562 278.500  c
376.062 278.500 376.497 278.312 376.867 277.937  c
377.237 277.562 377.421 277.104 377.421 276.562  c
377.421 276.041 377.255 275.557 376.921 275.109  c
376.588 274.661 376.130 274.312 375.546 274.062  c
375.078 273.875 374.447 273.765 373.656 273.734  c
375.312 270.390 l
378.390 270.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
485.995 255.776 m
485.995 260.776 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
488.531 271.234 m
490.625 270.218 l
490.828 270.218 l
490.828 277.484 l
490.828 277.963 490.849 278.263 490.890 278.382  c
490.932 278.502 491.015 278.593 491.140 278.656  c
491.265 278.718 491.520 278.755 491.906 278.765  c
491.906 279.000 l
488.671 279.000 l
488.671 278.765 l
489.078 278.755 489.341 278.718 489.460 278.656  c
489.580 278.593 489.664 278.510 489.710 278.406  c
489.757 278.302 489.781 277.994 489.781 277.484  c
489.781 272.843 l
489.781 272.208 489.760 271.802 489.718 271.625  c
489.687 271.489 489.632 271.390 489.554 271.328  c
489.476 271.265 489.380 271.234 489.265 271.234  c
489.109 271.234 488.895 271.302 488.625 271.437  c
488.531 271.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
31.8997 255.776 m
31.8997 258.276 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
55.7995 255.776 m
55.7995 258.276 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
79.6993 255.776 m
79.6993 258.276 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
103.599 255.776 m
103.599 258.276 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
151.398 255.776 m
151.398 258.276 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
175.298 255.776 m
175.298 258.276 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
199.198 255.776 m
199.198 258.276 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
223.098 255.776 m
223.098 258.276 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
270.897 255.776 m
270.897 258.276 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
294.797 255.776 m
294.797 258.276 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
318.697 255.776 m
318.697 258.276 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
342.597 255.776 m
342.597 258.276 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
390.396 255.776 m
390.396 258.276 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
414.296 255.776 m
414.296 258.276 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
438.196 255.776 m
438.196 258.276 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
462.096 255.776 m
462.096 258.276 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
246.997 488.000 m
246.997 3.00204 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
201 122 8 15 rc
Q
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
246.997 458.002 m
241.997 458.002 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
219 457 6 13 rc
newpath
229.796 464.437 m
221.203 464.437 l
221.203 463.765 l
229.796 463.765 l
229.796 464.437 l
h
f
Q
newpath
228.531 460.234 m
230.625 459.218 l
230.828 459.218 l
230.828 466.484 l
230.828 466.963 230.849 467.263 230.890 467.382  c
230.932 467.502 231.015 467.593 231.140 467.656  c
231.265 467.718 231.520 467.755 231.906 467.765  c
231.906 468.000 l
228.671 468.000 l
228.671 467.765 l
229.078 467.755 229.341 467.718 229.460 467.656  c
229.580 467.593 229.664 467.510 229.710 467.406  c
229.757 467.302 229.781 466.994 229.781 466.484  c
229.781 461.843 l
229.781 461.208 229.760 460.802 229.718 460.625  c
229.687 460.489 229.632 460.390 229.554 460.328  c
229.476 460.265 229.380 460.234 229.265 460.234  c
229.109 460.234 228.895 460.302 228.625 460.437  c
228.531 460.234 l
h
235.125 466.765 m
235.322 466.765 235.489 466.835 235.625 466.976  c
235.760 467.117 235.828 467.281 235.828 467.468  c
235.828 467.666 235.760 467.833 235.625 467.968  c
235.489 468.104 235.322 468.171 235.125 468.171  c
234.927 468.171 234.760 468.104 234.625 467.968  c
234.489 467.833 234.421 467.666 234.421 467.468  c
234.421 467.270 234.489 467.104 234.625 466.968  c
234.760 466.833 234.927 466.765 235.125 466.765  c
h
242.390 459.390 m
241.890 460.468 l
239.312 460.468 l
238.750 461.625 l
239.864 461.791 240.750 462.208 241.406 462.875  c
241.968 463.447 242.250 464.125 242.250 464.906  c
242.250 465.364 242.158 465.786 241.976 466.171  c
241.794 466.557 241.562 466.885 241.281 467.156  c
241.000 467.427 240.687 467.640 240.343 467.796  c
239.864 468.036 239.364 468.156 238.843 468.156  c
238.333 468.156 237.960 468.067 237.726 467.890  c
237.492 467.713 237.375 467.520 237.375 467.312  c
237.375 467.187 237.424 467.080 237.523 466.992  c
237.622 466.903 237.744 466.859 237.890 466.859  c
237.994 466.859 238.088 466.875 238.171 466.906  c
238.255 466.937 238.395 467.026 238.593 467.171  c
238.916 467.390 239.239 467.500 239.562 467.500  c
240.062 467.500 240.497 467.312 240.867 466.937  c
241.237 466.562 241.421 466.104 241.421 465.562  c
241.421 465.041 241.255 464.557 240.921 464.109  c
240.588 463.661 240.130 463.312 239.546 463.062  c
239.078 462.875 238.447 462.765 237.656 462.734  c
239.312 459.390 l
242.390 459.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 390.594 m
241.997 390.594 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
229 389 6 13 rc
newpath
239.796 396.437 m
231.203 396.437 l
231.203 395.765 l
239.796 395.765 l
239.796 396.437 l
h
f
Q
newpath
238.531 392.234 m
240.625 391.218 l
240.828 391.218 l
240.828 398.484 l
240.828 398.963 240.849 399.263 240.890 399.382  c
240.932 399.502 241.015 399.593 241.140 399.656  c
241.265 399.718 241.520 399.755 241.906 399.765  c
241.906 400.000 l
238.671 400.000 l
238.671 399.765 l
239.078 399.755 239.341 399.718 239.460 399.656  c
239.580 399.593 239.664 399.510 239.710 399.406  c
239.757 399.302 239.781 398.994 239.781 398.484  c
239.781 393.843 l
239.781 393.208 239.760 392.802 239.718 392.625  c
239.687 392.489 239.632 392.390 239.554 392.328  c
239.476 392.265 239.380 392.234 239.265 392.234  c
239.109 392.234 238.895 392.302 238.625 392.437  c
238.531 392.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 323.185 m
241.997 323.185 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
219 322 6 13 rc
newpath
229.796 329.437 m
221.203 329.437 l
221.203 328.765 l
229.796 328.765 l
229.796 329.437 l
h
f
Q
newpath
227.468 328.750 m
227.468 327.770 227.617 326.924 227.914 326.210  c
228.210 325.497 228.604 324.968 229.093 324.625  c
229.479 324.354 229.875 324.218 230.281 324.218  c
230.937 324.218 231.526 324.552 232.046 325.218  c
232.703 326.052 233.031 327.182 233.031 328.609  c
233.031 329.609 232.888 330.458 232.601 331.156  c
232.315 331.854 231.947 332.362 231.500 332.679  c
231.052 332.997 230.625 333.156 230.218 333.156  c
229.395 333.156 228.708 332.671 228.156 331.703  c
227.697 330.880 227.468 329.895 227.468 328.750  c
h
228.718 328.906 m
228.718 330.093 228.864 331.062 229.156 331.812  c
229.395 332.437 229.755 332.750 230.234 332.750  c
230.463 332.750 230.700 332.648 230.945 332.445  c
231.190 332.242 231.375 331.895 231.500 331.406  c
231.697 330.687 231.796 329.661 231.796 328.328  c
231.796 327.349 231.692 326.531 231.484 325.875  c
231.338 325.385 231.140 325.041 230.890 324.843  c
230.724 324.708 230.515 324.640 230.265 324.640  c
229.984 324.640 229.729 324.765 229.500 325.015  c
229.197 325.369 228.992 325.924 228.882 326.679  c
228.773 327.434 228.718 328.177 228.718 328.906  c
h
235.125 331.765 m
235.322 331.765 235.489 331.835 235.625 331.976  c
235.760 332.117 235.828 332.281 235.828 332.468  c
235.828 332.666 235.760 332.833 235.625 332.968  c
235.489 333.104 235.322 333.171 235.125 333.171  c
234.927 333.171 234.760 333.104 234.625 332.968  c
234.489 332.833 234.421 332.666 234.421 332.468  c
234.421 332.270 234.489 332.104 234.625 331.968  c
234.760 331.833 234.927 331.765 235.125 331.765  c
h
242.390 324.390 m
241.890 325.468 l
239.312 325.468 l
238.750 326.625 l
239.864 326.791 240.750 327.208 241.406 327.875  c
241.968 328.447 242.250 329.125 242.250 329.906  c
242.250 330.364 242.158 330.786 241.976 331.171  c
241.794 331.557 241.562 331.885 241.281 332.156  c
241.000 332.427 240.687 332.640 240.343 332.796  c
239.864 333.036 239.364 333.156 238.843 333.156  c
238.333 333.156 237.960 333.067 237.726 332.890  c
237.492 332.713 237.375 332.520 237.375 332.312  c
237.375 332.187 237.424 332.080 237.523 331.992  c
237.622 331.903 237.744 331.859 237.890 331.859  c
237.994 331.859 238.088 331.875 238.171 331.906  c
238.255 331.937 238.395 332.026 238.593 332.171  c
238.916 332.390 239.239 332.500 239.562 332.500  c
240.062 332.500 240.497 332.312 240.867 331.937  c
241.237 331.562 241.421 331.104 241.421 330.562  c
241.421 330.041 241.255 329.557 240.921 329.109  c
240.588 328.661 240.130 328.312 239.546 328.062  c
239.078 327.875 238.447 327.765 237.656 327.734  c
239.312 324.390 l
242.390 324.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 255.776 m
241.997 255.776 l
S
Q
q
0 w
newpath
246.997 188.367 m
241.997 188.367 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
227.468 193.750 m
227.468 192.770 227.617 191.924 227.914 191.210  c
228.210 190.497 228.604 189.968 229.093 189.625  c
229.479 189.354 229.875 189.218 230.281 189.218  c
230.937 189.218 231.526 189.552 232.046 190.218  c
232.703 191.052 233.031 192.182 233.031 193.609  c
233.031 194.609 232.888 195.458 232.601 196.156  c
232.315 196.854 231.947 197.362 231.500 197.679  c
231.052 197.997 230.625 198.156 230.218 198.156  c
229.395 198.156 228.708 197.671 228.156 196.703  c
227.697 195.880 227.468 194.895 227.468 193.750  c
h
228.718 193.906 m
228.718 195.093 228.864 196.062 229.156 196.812  c
229.395 197.437 229.755 197.750 230.234 197.750  c
230.463 197.750 230.700 197.648 230.945 197.445  c
231.190 197.242 231.375 196.895 231.500 196.406  c
231.697 195.687 231.796 194.661 231.796 193.328  c
231.796 192.349 231.692 191.531 231.484 190.875  c
231.338 190.385 231.140 190.041 230.890 189.843  c
230.724 189.708 230.515 189.640 230.265 189.640  c
229.984 189.640 229.729 189.765 229.500 190.015  c
229.197 190.369 228.992 190.924 228.882 191.679  c
228.773 192.434 228.718 193.177 228.718 193.906  c
h
235.125 196.765 m
235.322 196.765 235.489 196.835 235.625 196.976  c
235.760 197.117 235.828 197.281 235.828 197.468  c
235.828 197.666 235.760 197.833 235.625 197.968  c
235.489 198.104 235.322 198.171 235.125 198.171  c
234.927 198.171 234.760 198.104 234.625 197.968  c
234.489 197.833 234.421 197.666 234.421 197.468  c
234.421 197.270 234.489 197.104 234.625 196.968  c
234.760 196.833 234.927 196.765 235.125 196.765  c
h
242.390 189.390 m
241.890 190.468 l
239.312 190.468 l
238.750 191.625 l
239.864 191.791 240.750 192.208 241.406 192.875  c
241.968 193.447 242.250 194.125 242.250 194.906  c
242.250 195.364 242.158 195.786 241.976 196.171  c
241.794 196.557 241.562 196.885 241.281 197.156  c
241.000 197.427 240.687 197.640 240.343 197.796  c
239.864 198.036 239.364 198.156 238.843 198.156  c
238.333 198.156 237.960 198.067 237.726 197.890  c
237.492 197.713 237.375 197.520 237.375 197.312  c
237.375 197.187 237.424 197.080 237.523 196.992  c
237.622 196.903 237.744 196.859 237.890 196.859  c
237.994 196.859 238.088 196.875 238.171 196.906  c
238.255 196.937 238.395 197.026 238.593 197.171  c
238.916 197.390 239.239 197.500 239.562 197.500  c
240.062 197.500 240.497 197.312 240.867 196.937  c
241.237 196.562 241.421 196.104 241.421 195.562  c
241.421 195.041 241.255 194.557 240.921 194.109  c
240.588 193.661 240.130 193.312 239.546 193.062  c
239.078 192.875 238.447 192.765 237.656 192.734  c
239.312 189.390 l
242.390 189.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 120.958 m
241.997 120.958 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
238.531 122.234 m
240.625 121.218 l
240.828 121.218 l
240.828 128.484 l
240.828 128.963 240.849 129.263 240.890 129.382  c
240.932 129.502 241.015 129.593 241.140 129.656  c
241.265 129.718 241.520 129.755 241.906 129.765  c
241.906 130.000 l
238.671 130.000 l
238.671 129.765 l
239.078 129.755 239.341 129.718 239.460 129.656  c
239.580 129.593 239.664 129.510 239.710 129.406  c
239.757 129.302 239.781 128.994 239.781 128.484  c
239.781 123.843 l
239.781 123.208 239.760 122.802 239.718 122.625  c
239.687 122.489 239.632 122.390 239.554 122.328  c
239.476 122.265 239.380 122.234 239.265 122.234  c
239.109 122.234 238.895 122.302 238.625 122.437  c
238.531 122.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 53.5498 m
241.997 53.5498 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
228.531 55.2343 m
230.625 54.2187 l
230.828 54.2187 l
230.828 61.4843 l
230.828 61.9635 230.849 62.2630 230.890 62.3828  c
230.932 62.5026 231.015 62.5937 231.140 62.6562  c
231.265 62.7187 231.520 62.7552 231.906 62.7656  c
231.906 63.0000 l
228.671 63.0000 l
228.671 62.7656 l
229.078 62.7552 229.341 62.7187 229.460 62.6562  c
229.580 62.5937 229.664 62.5104 229.710 62.4062  c
229.757 62.3020 229.781 61.9947 229.781 61.4843  c
229.781 56.8437 l
229.781 56.2083 229.760 55.8020 229.718 55.6250  c
229.687 55.4895 229.632 55.3906 229.554 55.3281  c
229.476 55.2656 229.380 55.2343 229.265 55.2343  c
229.109 55.2343 228.895 55.3020 228.625 55.4375  c
228.531 55.2343 l
h
235.125 61.7656 m
235.322 61.7656 235.489 61.8359 235.625 61.9765  c
235.760 62.1171 235.828 62.2812 235.828 62.4687  c
235.828 62.6666 235.760 62.8333 235.625 62.9687  c
235.489 63.1041 235.322 63.1718 235.125 63.1718  c
234.927 63.1718 234.760 63.1041 234.625 62.9687  c
234.489 62.8333 234.421 62.6666 234.421 62.4687  c
234.421 62.2708 234.489 62.1041 234.625 61.9687  c
234.760 61.8333 234.927 61.7656 235.125 61.7656  c
h
242.390 54.3906 m
241.890 55.4687 l
239.312 55.4687 l
238.750 56.6250 l
239.864 56.7916 240.750 57.2083 241.406 57.8750  c
241.968 58.4479 242.250 59.1250 242.250 59.9062  c
242.250 60.3645 242.158 60.7864 241.976 61.1718  c
241.794 61.5572 241.562 61.8854 241.281 62.1562  c
241.000 62.4270 240.687 62.6406 240.343 62.7968  c
239.864 63.0364 239.364 63.1562 238.843 63.1562  c
238.333 63.1562 237.960 63.0677 237.726 62.8906  c
237.492 62.7135 237.375 62.5208 237.375 62.3125  c
237.375 62.1875 237.424 62.0807 237.523 61.9921  c
237.622 61.9036 237.744 61.8593 237.890 61.8593  c
237.994 61.8593 238.088 61.8750 238.171 61.9062  c
238.255 61.9375 238.395 62.0260 238.593 62.1718  c
238.916 62.3906 239.239 62.5000 239.562 62.5000  c
240.062 62.5000 240.497 62.3125 240.867 61.9375  c
241.237 61.5625 241.421 61.1041 241.421 60.5625  c
241.421 60.0416 241.255 59.5572 240.921 59.1093  c
240.588 58.6614 240.130 58.3125 239.546 58.0625  c
239.078 57.8750 238.447 57.7656 237.656 57.7343  c
239.312 54.3906 l
242.390 54.3906 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 484.966 m
244.497 484.966 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 471.484 m
244.497 471.484 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 444.521 m
244.497 444.521 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 431.039 m
244.497 431.039 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 417.557 m
244.497 417.557 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 404.075 m
244.497 404.075 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 377.112 m
244.497 377.112 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 363.630 m
244.497 363.630 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 350.148 m
244.497 350.148 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 336.667 m
244.497 336.667 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 309.703 m
244.497 309.703 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 296.221 m
244.497 296.221 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 282.739 m
244.497 282.739 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 269.258 m
244.497 269.258 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 242.294 m
244.497 242.294 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 228.812 m
244.497 228.812 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 215.331 m
244.497 215.331 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 201.849 m
244.497 201.849 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 174.885 m
244.497 174.885 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 161.404 m
244.497 161.404 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 147.922 m
244.497 147.922 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 134.440 m
244.497 134.440 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 107.476 m
244.497 107.476 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 93.9951 m
244.497 93.9951 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 80.5134 m
244.497 80.5134 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 67.0316 m
244.497 67.0316 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 40.0680 m
244.497 40.0680 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 26.5863 m
244.497 26.5863 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
246.997 13.1045 m
244.497 13.1045 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 500 500 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
